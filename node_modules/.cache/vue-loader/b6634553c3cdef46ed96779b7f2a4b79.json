{"remainingRequest":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/src/App.vue","mtime":1585119550000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\nimport router from \"./router\";\nimport store from \"./store\";\n\nrouter.beforeEach((to, from, next) => {\n  // eslint-disable-next-line no-unused-vars\n  const { path, meta } = to;\n  const { requireLogin } = meta;\n  //determine loginType, update loginType & sendInfo\n  if (!store.state.loginType && Object.keys(to.query).length !== 0) {\n    store.commit(\"update_loginType\", \"send\");\n    store.commit(\"update_sendInfo\", to.query);\n  }\n  if (to.path == \"/\") {\n    console.log(\"INTO LOGIN\");\n    // clear vuex content\n    store.replaceState(Object.assign({}, store.state, {}));\n    // if registered\n    if (window.localStorage[\"encryptSeed\"]) {\n      return next();\n    } else {\n      return next({ path: \"/create\", query: to.query });\n    }\n  }\n  if (!requireLogin) next();\n  // Not Require Logining\n  else if (store.state.password) next();\n  //Have logined\n  else {\n    if (store.state.loginType === \"send\") {\n      next({ path: \"/\", query: to.query });\n    } else {\n      next({ path: \"/\", params: { back: to } });\n    }\n  }\n});\n\nrouter.afterEach((to, from) => {\n  //add query\n  if (\n    to.path !== \"/home/send/finish\" &&\n    Object.keys(from.query).length !== 0 &&\n    Object.keys(to.query).length === 0\n  ) {\n    router.push({ path: to.path, query: from.query });\n  }\n});\n\nfunction debounce(func, delay) {\n  let timeout;\n  return function() {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      func.apply(this, arguments);\n    }, delay);\n  };\n}\n\nexport default {\n  name: \"App\",\n  data: () => ({\n    loginTimer: \"\"\n  }),\n  methods: {\n    resetTimer() {\n      clearTimeout(this.loginTimer);\n      let timeout = window.localStorage[\"sessionTimeout\"];\n      if (!timeout) return;\n      this.loginTimer = setTimeout(() => {\n        if (\n          this.$store.state.password &&\n          this.$route.path !== \"/\" &&\n          this.$route.path !== \"/create\" &&\n          this.$route.path !== \"/restore\"\n        ) {\n          this.$router.replace({ path: \"/\" });\n        }\n      }, timeout * 60 * 1000);\n    }\n  },\n  mounted() {\n    document.addEventListener(\n      \"mousemove\",\n      debounce(() => {\n        this.resetTimer();\n      }, 1000)\n    );\n    document.addEventListener(\n      \"mousedown\",\n      debounce(() => {\n        this.resetTimer();\n      }, 1000)\n    );\n    document.addEventListener(\n      \"touchstart\",\n      debounce(() => {\n        this.resetTimer();\n      }, 1000)\n    );\n  }\n};\n",null]}