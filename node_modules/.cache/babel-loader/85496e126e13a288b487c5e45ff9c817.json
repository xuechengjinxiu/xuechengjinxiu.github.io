{"remainingRequest":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/thread-loader/dist/cjs.js!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/babel-loader/lib/index.js!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/vuetify/lib/components/VCalendar/mixins/mouse.js","dependencies":[{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/vuetify/lib/components/VCalendar/mixins/mouse.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport Vue from 'vue';\nexport default Vue.extend({\n  name: 'mouse',\n  methods: {\n    getDefaultMouseEventHandlers: function getDefaultMouseEventHandlers(suffix, getEvent) {\n      var _this$getMouseEventHa;\n\n      return this.getMouseEventHandlers((_this$getMouseEventHa = {}, _defineProperty(_this$getMouseEventHa, 'click' + suffix, {\n        event: 'click'\n      }), _defineProperty(_this$getMouseEventHa, 'contextmenu' + suffix, {\n        event: 'contextmenu',\n        prevent: true,\n        result: false\n      }), _defineProperty(_this$getMouseEventHa, 'mousedown' + suffix, {\n        event: 'mousedown'\n      }), _defineProperty(_this$getMouseEventHa, 'mousemove' + suffix, {\n        event: 'mousemove'\n      }), _defineProperty(_this$getMouseEventHa, 'mouseup' + suffix, {\n        event: 'mouseup'\n      }), _defineProperty(_this$getMouseEventHa, 'mouseenter' + suffix, {\n        event: 'mouseenter'\n      }), _defineProperty(_this$getMouseEventHa, 'mouseleave' + suffix, {\n        event: 'mouseleave'\n      }), _defineProperty(_this$getMouseEventHa, 'touchstart' + suffix, {\n        event: 'touchstart'\n      }), _defineProperty(_this$getMouseEventHa, 'touchmove' + suffix, {\n        event: 'touchmove'\n      }), _defineProperty(_this$getMouseEventHa, 'touchend' + suffix, {\n        event: 'touchend'\n      }), _this$getMouseEventHa), getEvent);\n    },\n    getMouseEventHandlers: function getMouseEventHandlers(events, getEvent) {\n      var _this = this;\n\n      var on = {};\n\n      var _loop = function _loop(event) {\n        var eventOptions = events[event];\n        if (!_this.$listeners[event]) return \"continue\"; // TODO somehow pull in modifiers\n\n        var prefix = eventOptions.passive ? '&' : (eventOptions.once ? '~' : '') + (eventOptions.capture ? '!' : '');\n        var key = prefix + eventOptions.event;\n\n        var handler = function handler(e) {\n          var mouseEvent = e;\n\n          if (eventOptions.button === undefined || mouseEvent.buttons > 0 && mouseEvent.button === eventOptions.button) {\n            if (eventOptions.prevent) {\n              e.preventDefault();\n            }\n\n            if (eventOptions.stop) {\n              e.stopPropagation();\n            }\n\n            _this.$emit(event, getEvent(e));\n          }\n\n          return eventOptions.result;\n        };\n\n        if (key in on) {\n          /* istanbul ignore next */\n          if (Array.isArray(on[key])) {\n            on[key].push(handler);\n          } else {\n            on[key] = [on[key], handler];\n          }\n        } else {\n          on[key] = handler;\n        }\n      };\n\n      for (var event in events) {\n        var _ret = _loop(event);\n\n        if (_ret === \"continue\") continue;\n      }\n\n      return on;\n    }\n  }\n});",null]}