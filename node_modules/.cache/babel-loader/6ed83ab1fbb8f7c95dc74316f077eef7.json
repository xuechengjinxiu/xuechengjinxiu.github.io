{"remainingRequest":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/thread-loader/dist/cjs.js!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/babel-loader/lib/index.js!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/vuetify/lib/components/VRadioGroup/VRadio.js","dependencies":[{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/vuetify/lib/components/VRadioGroup/VRadio.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Styles\nimport \"../../../src/components/VRadioGroup/VRadio.sass\";\nimport VLabel from \"../VLabel\";\nimport VIcon from \"../VIcon\";\nimport VInput from \"../VInput\"; // Mixins\n\nimport Colorable from \"../../mixins/colorable\";\nimport { factory as GroupableFactory } from \"../../mixins/groupable\";\nimport Rippleable from \"../../mixins/rippleable\";\nimport Themeable from \"../../mixins/themeable\";\nimport Selectable from \"../../mixins/selectable\"; // Utilities\n\nimport { getSlot } from \"../../util/helpers\";\nimport mixins from \"../../util/mixins\";\nvar baseMixins = mixins(Colorable, Rippleable, GroupableFactory('radioGroup'), Themeable);\n/* @vue/component */\n\nexport default baseMixins.extend().extend({\n  name: 'v-radio',\n  inheritAttrs: false,\n  props: {\n    disabled: Boolean,\n    label: String,\n    name: String,\n    id: String,\n    onIcon: {\n      type: String,\n      default: '$vuetify.icons.radioOn'\n    },\n    offIcon: {\n      type: String,\n      default: '$vuetify.icons.radioOff'\n    },\n    readonly: Boolean,\n    value: {\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      isFocused: false\n    };\n  },\n  computed: {\n    classes: function classes() {\n      return _objectSpread({\n        'v-radio--is-disabled': this.isDisabled,\n        'v-radio--is-focused': this.isFocused\n      }, this.themeClasses, {}, this.groupClasses);\n    },\n    computedColor: function computedColor() {\n      return Selectable.options.computed.computedColor.call(this);\n    },\n    computedIcon: function computedIcon() {\n      return this.isActive ? this.onIcon : this.offIcon;\n    },\n    computedId: function computedId() {\n      return VInput.options.computed.computedId.call(this);\n    },\n    hasLabel: VInput.options.computed.hasLabel,\n    hasState: function hasState() {\n      return (this.radioGroup || {}).hasState;\n    },\n    isDisabled: function isDisabled() {\n      return this.disabled || !!(this.radioGroup || {}).disabled;\n    },\n    isReadonly: function isReadonly() {\n      return this.readonly || !!(this.radioGroup || {}).readonly;\n    },\n    computedName: function computedName() {\n      if (this.name || !this.radioGroup) {\n        return this.name;\n      }\n\n      return this.radioGroup.name || \"radio-\".concat(this.radioGroup._uid);\n    },\n    validationState: function validationState() {\n      return (this.radioGroup || {}).validationState || this.computedColor;\n    }\n  },\n  methods: {\n    genInput: function genInput(args) {\n      // We can't actually use the mixin directly because\n      // it's made for standalone components, but its\n      // genInput method is exactly what we need\n      return Selectable.options.methods.genInput.call(this, 'radio', args);\n    },\n    genLabel: function genLabel() {\n      var _this = this;\n\n      if (!this.hasLabel) return null;\n      return this.$createElement(VLabel, {\n        on: {\n          click: function click(e) {\n            // Prevent label from\n            // causing the input\n            // to focus\n            e.preventDefault();\n\n            _this.onChange();\n          }\n        },\n        attrs: {\n          for: this.computedId\n        },\n        props: {\n          color: this.validationState,\n          focused: this.hasState\n        }\n      }, getSlot(this, 'label') || this.label);\n    },\n    genRadio: function genRadio() {\n      return this.$createElement('div', {\n        staticClass: 'v-input--selection-controls__input'\n      }, [this.genInput(_objectSpread({\n        name: this.computedName,\n        value: this.value\n      }, this.$attrs)), this.genRipple(this.setTextColor(this.validationState)), this.$createElement(VIcon, this.setTextColor(this.validationState, {}), this.computedIcon)]);\n    },\n    onFocus: function onFocus(e) {\n      this.isFocused = true;\n      this.$emit('focus', e);\n    },\n    onBlur: function onBlur(e) {\n      this.isFocused = false;\n      this.$emit('blur', e);\n    },\n    onChange: function onChange() {\n      if (this.isDisabled || this.isReadonly || this.isActive) return;\n      this.toggle();\n    },\n    onKeydown: function onKeydown() {}\n  },\n  render: function render(h) {\n    var data = {\n      staticClass: 'v-radio',\n      class: this.classes\n    };\n    return h('div', data, [this.genRadio(), this.genLabel()]);\n  }\n});",null]}