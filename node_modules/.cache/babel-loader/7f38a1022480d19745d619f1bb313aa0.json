{"remainingRequest":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/thread-loader/dist/cjs.js!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/babel-loader/lib/index.js!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/vuetify-loader/lib/loader.js!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/src/views/ComCreRes.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/src/views/ComCreRes.vue","mtime":1585119550000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport seedLib, { Seed } from \"@/libs1/seed\";\nimport words from \"@/libs1/word-list\";\nexport default {\n  props: {\n    hasSilder: {\n      type: Boolean,\n      default: false\n    },\n    titleTip: String,\n    tipsBtn: String,\n    seedWords: String\n  },\n  created: function created() {},\n  data: function data() {\n    return {\n      walletNum: 1,\n      checkWordPromp: \"\",\n      valid: false,\n      password: \"\",\n      password2: \"\",\n      dialog: false,\n      passSeed: true,\n      // addressAmount: 1,\n      rules: {\n        required: function required(f) {\n          return function (v) {\n            return !!v || \"\".concat(f, \" is required\");\n          };\n        },\n        min: function min(f, n) {\n          return function (v) {\n            return (v == null ? \"\" : v).length >= n || \"\".concat(f, \" is too short (should be at least \").concat(n, \" characters)\");\n          };\n        },\n        max: function max(f, n) {\n          return function (v) {\n            return (v == null ? \"\" : v).length <= n || \"\".concat(f, \" is too long (should be at most \").concat(n, \" characters)\");\n          };\n        },\n        noSymbol: function noSymbol(f) {\n          return function (v) {\n            return !/[-+\\\\.,/()*&^%$#@!~?{};:<>|]/.test(v) || \"\".concat(f, \" is not valid (special symbols detected)\");\n          };\n        },\n        containAlpha: function containAlpha(f) {\n          return function (v) {\n            return /[a-zA-z]/.test(v) || \"\".concat(f, \" must contain alphabetical character\");\n          };\n        },\n        passEquel: function passEquel(txt) {\n          return function (v) {\n            return v === txt || \"Passwords are not the same\";\n          };\n        }\n      }\n    };\n  },\n  computed: {\n    checkStrong: function checkStrong() {\n      if (this.password != null) {\n        if (this.password.length >= 8 && this.password.length <= 32) {\n          var Modes = 0;\n\n          for (var i = 0; i < this.password.length; i++) {\n            Modes |= this.checkMode(this.password.charCodeAt(i));\n          }\n\n          console.log(Modes);\n          return this.bitTotal(Modes);\n        }\n      }\n\n      return 0;\n    }\n  },\n  watch: {\n    dialog: function dialog(nv) {\n      //lock scroll when dialog is open\n      this.$utils.lockScroll(nv);\n    }\n  },\n  methods: {\n    clearSeeds: function clearSeeds() {\n      this.$refs.textarea.value = \"\";\n    },\n    checkMode: function checkMode(NP) {\n      if (NP >= 48 && NP <= 57) return 1; //number\n\n      if (NP >= 65 && NP <= 90) return 2; //uppercase\n\n      if (NP >= 97 && NP <= 122) return 2; //lowercase\n      else return 4;\n    },\n    bitTotal: function bitTotal(num) {\n      var modes = 0;\n\n      for (var i = 0; i < 4; i++) {\n        if (num & 1) modes++;\n        num >>>= 1; // displacement calculation\n      }\n\n      console.log(modes);\n      return modes;\n    },\n    checkWords: function checkWords() {\n      var checkWords = this.$refs.textarea.value.trim().replace(/\\s+|\\r+|\\n+/g, \" \").split(\" \");\n\n      if (checkWords.length >= 15 && checkWords.length <= 18) {\n        var warningWords = checkWords.filter(function (item) {\n          return words.indexOf(item) === -1;\n        });\n\n        if (warningWords.length != 0) {\n          // alert(\"warning! \" + warningWords + \" is not in the vocabulary\");\n          this.checkWordPromp = \"Warning! Some words is not in the vocabulary\";\n        } else {\n          this.checkWordPromp = \"\";\n        }\n\n        return true;\n      } else {\n        // alert(\"Your seed should be more than 15 and less than 18\");\n        this.checkWordPromp = \"Your seed should be more than 15 and less than 18\";\n        return false;\n      }\n    },\n    register: function register() {\n      if (!this.checkWords()) return;\n      if (!this.$refs.form.validate()) return; //Clear Old Info\n\n      window.localStorage.clear();\n      this.$store.commit(\"reset_state\"); //Get Seed Words\n\n      var standardSeed = this.$refs.textarea.value.trim().replace(/\\s+|\\r+|\\n+/g, \" \"); //encrypt seed\n\n      var userInfo = {\n        encrSeed: seedLib.encryptSeedPhrase(standardSeed, this.password)\n      };\n      var aliasObj = {}; // Storage vuex\n\n      this.$store.commit(\"ADD_INFO\", {\n        password: this.password,\n        seed: standardSeed,\n        walletCount: this.walletNum,\n        currentIndex: 0\n      });\n\n      for (var i = 0; i < this.walletNum; i++) {\n        //Generate seed information\n        aliasObj[i] = \"\";\n        this.seed = new Seed(standardSeed, i, this.$config.NET_BYTE);\n        this.$store.commit(\"add_wallets\", {\n          index: i,\n          data: {\n            address: this.seed.address,\n            keyPair: this.seed.keyPair,\n            alias: \"\",\n            balance: \"\",\n            vsysBalance: 0,\n            transactionCount: \"\",\n            updateTime: \"\"\n          }\n        });\n      } //Init encryptSeed\n\n\n      window.localStorage[\"encryptSeed\"] = seedLib.encryptSeedPhrase(JSON.stringify(userInfo), this.password); //Init sessionTimeout\n\n      window.localStorage[\"sessionTimeout\"] = 5; //Init lastLogin\n\n      window.localStorage[\"lastLogin\"] = new Date().getTime(); //Init walletCount\n\n      window.localStorage[\"walletCount\"] = this.walletNum; //Init alias\n\n      window.localStorage[\"alias\"] = JSON.stringify(aliasObj); //goto createsecond\n\n      this.$router.replace({\n        path: \"/createsecond\"\n      });\n    }\n  }\n};",null]}