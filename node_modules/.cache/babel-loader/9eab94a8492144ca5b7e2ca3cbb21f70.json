{"remainingRequest":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/thread-loader/dist/cjs.js!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/babel-loader/lib/index.js!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/vuetify-loader/lib/loader.js!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/src/views/HomeContent.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/src/views/HomeContent.vue","mtime":1585119550000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport TimeAgo from \"vue2-timeago\";\nimport { QrcodeStream } from \"vue-qrcode-reader\";\nimport { mapState, mapGetters } from \"vuex\";\nimport scanQrStyle from \"@/views/Home/scanQrStyle.vue\";\nimport crypto from \"@/libs1/crypto\";\nimport InfiniteLoading from \"vue-infinite-loading\";\nexport default {\n  data: function data() {\n    return {\n      alias: \"\",\n      records: [],\n      lastKey: \"\",\n      lastType: \"all\",\n      isloading: false,\n      timer: \"\",\n      infiniteId: +new Date(),\n      address: \"\",\n      dialog: false,\n      scanOverlay: false,\n      scanOverlay1: false,\n      openCamera: \"off\",\n      qrImportInit: false,\n      editingAddress: false,\n      typetransation: \"All\",\n      txTypes: [\"All\", \"Income\", \"Out\"],\n      menuOn: false\n    };\n  },\n  created: function created() {\n    //get current address\n    this.address = this.wallets[this.currentIndex].address; //get current alias\n\n    this.alias = JSON.parse(window.localStorage[\"alias\"])[this.currentIndex];\n    this.requestData();\n  },\n  mounted: function mounted() {\n    this.timer = setTimeout(this.refreshTimer, 200000);\n    this.resizeRecords();\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.$utils.enableBodyScroll();\n    clearTimeout(this.timer);\n  },\n  watch: {\n    scanOverlay1: function scanOverlay1(nv) {\n      this.$utils.lockScroll(nv);\n    }\n  },\n  computed: _objectSpread({}, mapState([\"wallets\", \"currentIndex\", \"unity\"]), {}, mapGetters([\"balance\"])),\n  methods: {\n    refreshTimer: function refreshTimer() {\n      if (this.isloading) return;\n      this.infiniteReload();\n      this.timer = setTimeout(this.refreshTimer, 200000);\n    },\n    typeChange: function typeChange(type) {\n      //change records type and then refresh records data\n      this.typetransation = type;\n      this.lastType = {\n        All: \"all\",\n        Income: \"in\",\n        Out: \"out\"\n      }[type];\n      this.refreshData();\n    },\n    resizeRecords: function resizeRecords() {\n      //adjust min-height of records-list\n      if (this.$refs[\"records-list\"].style.minHeight) return;\n      var bp = this.$vuetify.breakpoint; //use window.innerHeight instead of vh\n\n      if (bp.sm) {\n        this.$refs[\"records-list\"].style.minHeight = \"\".concat(window.innerHeight - 0.45 * window.innerWidth - 181, \"px\");\n      }\n\n      if (bp.md) {\n        this.$refs[\"records-list\"].style.minHeight = \"\".concat(window.innerHeight - 385, \"px\");\n      }\n\n      if (bp.lg || bp.xl) {\n        this.$refs[\"records-list\"].style.minHeight = \"\".concat(window.innerHeight - 396, \"px\");\n      }\n    },\n    infiniteHandler: function infiniteHandler($state) {\n      var _this = this;\n\n      //infinite-loading handler\n      this.isloading = true;\n      this.$axios.get(\"token/transactions?tokenId=\".concat(this.$config.tokenId, \"&address=\").concat(this.address, \"&direction=\").concat(this.lastType, \"&startIndex=\").concat(this.lastKey), {\n        timeout: 60000\n      }).then(function (res) {\n        if (res.data && res.data.result.Count) {\n          _this.records = _this.records.concat(res.data.result.Items);\n\n          if (res.data.result.LastEvaluatedKey) {\n            _this.lastKey = res.data.result.LastEvaluatedKey;\n            $state.loaded();\n          } else {\n            _this.lastKey = \"\";\n            $state.loaded();\n            $state.complete();\n          }\n        } else {\n          $state.complete();\n        }\n      }).catch(function (err) {\n        if (err.response && err.response.status === 400) {\n          $state.complete();\n        }\n      }).finally(function () {\n        _this.isloading = false;\n      });\n    },\n    requestData: function () {\n      var _requestData = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                try {\n                  //request TOKEN info\n                  this.$store.dispatch(\"update_token\", this.$config.tokenId);\n                  this.requestBalance();\n                } catch (err) {\n                  console.log(err);\n                }\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function requestData() {\n        return _requestData.apply(this, arguments);\n      }\n\n      return requestData;\n    }(),\n    refreshData: function refreshData() {\n      //when refresh data, reload the infinite-loading component and reset the timer\n      if (this.isloading) return;\n      this.infiniteReload();\n      clearTimeout(this.timer);\n      this.timer = setTimeout(this.refreshTimer, 200000);\n    },\n    infiniteReload: function infiniteReload() {\n      //refresh token, balance and records\n      this.$store.dispatch(\"update_token\", this.$config.tokenId);\n      this.requestBalance();\n      this.records = [];\n      this.lastKey = \"\"; //change infiniteId to reload infinite-loading component\n\n      this.infiniteId += 1;\n    },\n    requestBalance: function requestBalance() {\n      this.$store.dispatch(\"update_balance\", {\n        index: this.currentIndex,\n        tokenId: this.$config.tokenId\n      });\n    },\n    routerTransaction: function routerTransaction(type) {\n      this.$router.replace({\n        path: \"/home/\" + type\n      });\n    },\n    // store in window.localStorage\n    storeAlias: function storeAlias() {\n      this.editingAddress = !this.editingAddress;\n      var alias = JSON.parse(window.localStorage[\"alias\"]);\n      var index = this.currentIndex;\n\n      if (this.alias.length <= 15) {\n        alias[index] = this.alias;\n        window.localStorage[\"alias\"] = JSON.stringify(alias);\n        this.$store.commit(\"update_wallet\", {\n          index: index,\n          alias: alias[index]\n        });\n      } else {\n        // alert(`Sorry! The name you wrote can't more than 15 character`);\n        this.alias = alias[index];\n      }\n    },\n    // scan qrcode\n    exitCamera: function exitCamera() {\n      this.scanOverlay = !this.scanOverlay;\n      this.scanOverlay1 = !this.scanOverlay1;\n      this.openCamera = \"off\";\n    },\n    onQrImportInit: function () {\n      var _onQrImportInit = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(promise) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                this.qrImportInit = true;\n                _context2.next = 4;\n                return promise;\n\n              case 4:\n                this.scanOverlay1 = true;\n                _context2.next = 11;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](0);\n                this.scanOverlay = false;\n\n                if (_context2.t0.name === \"NotAllowedError\") {\n                  alert(\"Please allow camera access permission\");\n                } else if (_context2.t0.name === \"NotFoundError\") {\n                  alert(\"No suitable camera device installed\");\n                } else if (_context2.t0.name === \"NotSupportedError\") {\n                  alert(\"Page is not served over HTTPS (or localhost)\");\n                } else if (_context2.t0.name === \"NotReadableError\") {\n                  alert(\"Maybe camera is already in use\");\n                } else if (_context2.t0.name === \"OverconstarinedError\") {\n                  alert(\"Pass constraints do not match any camera\");\n                } else {\n                  alert(_context2.t0);\n                }\n\n              case 11:\n                _context2.prev = 11;\n                this.qrImportInit = false;\n                return _context2.finish(11);\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 7, 11, 14]]);\n      }));\n\n      function onQrImportInit(_x) {\n        return _onQrImportInit.apply(this, arguments);\n      }\n\n      return onQrImportInit;\n    }(),\n    onQrDecode: function onQrDecode(decodeString) {\n      try {\n        console.log(decodeString);\n        if (!decodeString) return;\n        var receiveAddress = JSON.parse(decodeString);\n        console.log(receiveAddress);\n\n        if (crypto.isValidAddress(receiveAddress.address, this.$config.NET_BYTE)) {\n          this.$store.commit(\"update_sendInfo\", {\n            recipient: receiveAddress.address,\n            amount: receiveAddress.amount,\n            description: receiveAddress.description\n          });\n          this.$router.replace({\n            path: \"/home/send\"\n          });\n        }\n      } catch (err) {\n        console.error(err); // alert(\"The qr code you scanned is illegal in the site\");\n\n        this.qrSignCamera = \"auto\";\n      }\n    }\n  },\n  components: {\n    InfiniteLoading: InfiniteLoading,\n    TimeAgo: TimeAgo,\n    QrcodeStream: QrcodeStream,\n    scanQrStyle: scanQrStyle\n  }\n};",null]}