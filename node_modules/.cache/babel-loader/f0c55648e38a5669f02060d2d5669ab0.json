{"remainingRequest":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/thread-loader/dist/cjs.js!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/babel-loader/lib/index.js!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/vuetify/lib/components/VList/VListItem.js","dependencies":[{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/vuetify/lib/components/VList/VListItem.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Styles\nimport \"../../../src/components/VList/VListItem.sass\"; // Mixins\n\nimport Colorable from \"../../mixins/colorable\";\nimport Routable from \"../../mixins/routable\";\nimport { factory as GroupableFactory } from \"../../mixins/groupable\";\nimport Themeable from \"../../mixins/themeable\";\nimport { factory as ToggleableFactory } from \"../../mixins/toggleable\"; // Directives\n\nimport Ripple from \"../../directives/ripple\"; // Utilities\n\nimport { keyCodes } from \"./../../util/helpers\";\nimport { removed } from \"../../util/console\"; // Types\n\nimport mixins from \"../../util/mixins\";\nvar baseMixins = mixins(Colorable, Routable, Themeable, GroupableFactory('listItemGroup'), ToggleableFactory('inputValue'));\n/* @vue/component */\n\nexport default baseMixins.extend().extend({\n  name: 'v-list-item',\n  directives: {\n    Ripple: Ripple\n  },\n  inheritAttrs: false,\n  inject: {\n    isInGroup: {\n      default: false\n    },\n    isInList: {\n      default: false\n    },\n    isInMenu: {\n      default: false\n    },\n    isInNav: {\n      default: false\n    }\n  },\n  props: {\n    activeClass: {\n      type: String,\n      default: function _default() {\n        if (!this.listItemGroup) return '';\n        return this.listItemGroup.activeClass;\n      }\n    },\n    dense: Boolean,\n    inactive: Boolean,\n    link: Boolean,\n    tag: {\n      type: String,\n      default: 'div'\n    },\n    threeLine: Boolean,\n    twoLine: Boolean,\n    value: null\n  },\n  data: function data() {\n    return {\n      proxyClass: 'v-list-item--active'\n    };\n  },\n  computed: {\n    classes: function classes() {\n      return _objectSpread({\n        'v-list-item': true\n      }, Routable.options.computed.classes.call(this), {\n        'v-list-item--dense': this.dense,\n        'v-list-item--disabled': this.disabled,\n        'v-list-item--link': this.isClickable && !this.inactive,\n        'v-list-item--three-line': this.threeLine,\n        'v-list-item--two-line': this.twoLine\n      }, this.themeClasses);\n    },\n    isClickable: function isClickable() {\n      return Boolean(Routable.options.computed.isClickable.call(this) || this.listItemGroup);\n    }\n  },\n  created: function created() {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('avatar')) {\n      removed('avatar', this);\n    }\n  },\n  methods: {\n    click: function click(e) {\n      if (e.detail) this.$el.blur();\n      this.$emit('click', e);\n      this.to || this.toggle();\n    },\n    genAttrs: function genAttrs() {\n      var attrs = _objectSpread({\n        'aria-disabled': this.disabled ? true : undefined,\n        tabindex: this.isClickable && !this.disabled ? 0 : -1\n      }, this.$attrs);\n\n      if (this.$attrs.hasOwnProperty('role')) {// do nothing, role already provided\n      } else if (this.isInNav) {// do nothing, role is inherit\n      } else if (this.isInGroup) {\n        attrs.role = 'listitem';\n        attrs['aria-selected'] = String(this.isActive);\n      } else if (this.isInMenu) {\n        attrs.role = this.isClickable ? 'menuitem' : undefined;\n      } else if (this.isInList && !this.isLink) {\n        attrs.role = 'listitem';\n      }\n\n      return attrs;\n    }\n  },\n  render: function render(h) {\n    var _this = this;\n\n    var _this$generateRouteLi = this.generateRouteLink(),\n        tag = _this$generateRouteLi.tag,\n        data = _this$generateRouteLi.data;\n\n    data.attrs = _objectSpread({}, data.attrs, {}, this.genAttrs());\n    data.on = _objectSpread({}, data.on, {\n      click: this.click,\n      keydown: function keydown(e) {\n        /* istanbul ignore else */\n        if (e.keyCode === keyCodes.enter) _this.click(e);\n\n        _this.$emit('keydown', e);\n      }\n    });\n    var children = this.$scopedSlots.default ? this.$scopedSlots.default({\n      active: this.isActive,\n      toggle: this.toggle\n    }) : this.$slots.default;\n    tag = this.inactive ? 'div' : tag;\n    return h(tag, this.setTextColor(this.color, data), children);\n  }\n});",null]}