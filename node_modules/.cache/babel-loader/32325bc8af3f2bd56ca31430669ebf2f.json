{"remainingRequest":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/thread-loader/dist/cjs.js!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/babel-loader/lib/index.js!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/vuetify/lib/components/VColorPicker/VColorPickerSwatches.js","dependencies":[{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/vuetify/lib/components/VColorPicker/VColorPickerSwatches.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["// Styles\nimport \"../../../src/components/VColorPicker/VColorPickerSwatches.sass\"; // Components\n\nimport VIcon from '../VIcon'; // Helpers\n\nimport colors from '../../util/colors';\nimport { fromHex, parseColor } from './util';\nimport { convertToUnit, deepEqual } from '../../util/helpers';\nimport mixins from '../../util/mixins';\nimport Themeable from '../../mixins/themeable';\nimport { contrastRatio } from '../../util/colorUtils';\n\nfunction parseDefaultColors(colors) {\n  return Object.keys(colors).map(key => {\n    const color = colors[key];\n    return color.base ? [color.base, color.darken4, color.darken3, color.darken2, color.darken1, color.lighten1, color.lighten2, color.lighten3, color.lighten4, color.lighten5] : [color.black, color.white, color.transparent];\n  });\n}\n\nconst white = fromHex('#FFFFFF').rgba;\nconst black = fromHex('#000000').rgba;\nexport default mixins(Themeable).extend({\n  name: 'v-color-picker-swatches',\n  props: {\n    swatches: {\n      type: Array,\n      default: () => parseDefaultColors(colors)\n    },\n    color: Object,\n    maxWidth: [Number, String],\n    maxHeight: [Number, String]\n  },\n  methods: {\n    genColor(color) {\n      const content = this.$createElement('div', {\n        style: {\n          background: color\n        }\n      }, [deepEqual(this.color, parseColor(color, null)) && this.$createElement(VIcon, {\n        props: {\n          small: true,\n          dark: contrastRatio(this.color.rgba, white) > 2 && this.color.alpha > 0.5,\n          light: contrastRatio(this.color.rgba, black) > 2 && this.color.alpha > 0.5\n        }\n      }, '$vuetify.icons.success')]);\n      return this.$createElement('div', {\n        staticClass: 'v-color-picker__color',\n        on: {\n          // TODO: Less hacky way of catching transparent\n          click: () => this.$emit('update:color', fromHex(color === 'transparent' ? '#00000000' : color))\n        }\n      }, [content]);\n    },\n\n    genSwatches() {\n      return this.swatches.map(swatch => {\n        const colors = swatch.map(this.genColor);\n        return this.$createElement('div', {\n          staticClass: 'v-color-picker__swatch'\n        }, colors);\n      });\n    }\n\n  },\n\n  render(h) {\n    return h('div', {\n      staticClass: 'v-color-picker__swatches',\n      style: {\n        maxWidth: convertToUnit(this.maxWidth),\n        maxHeight: convertToUnit(this.maxHeight)\n      }\n    }, [this.$createElement('div', this.genSwatches())]);\n  }\n\n});",null]}