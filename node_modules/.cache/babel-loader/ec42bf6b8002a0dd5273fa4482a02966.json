{"remainingRequest":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/babel-loader/lib/index.js!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/eslint-loader/index.js??ref--13-0!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/src/libs1/convert.js","dependencies":[{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/src/libs1/convert.js","mtime":1585119550000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.typed.uint8-array\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.split\";\n// Derived from waves-api\n//\nimport BigNumber from \"bignumber.js\";\nimport Converters from \"./converters\";\n\nfunction performBitwiseAnd(a, b) {\n  var sa = a.toString(2).split(\".\")[0];\n  var sb = b.toString(2).split(\".\")[0];\n  var len = Math.min(sa.length, sb.length);\n  var s1 = sa.slice(sa.length - len);\n  var s2 = sb.slice(sb.length - len);\n  var result = new Array(len);\n\n  for (var i = len - 1; i >= 0; i--) {\n    result[i] = s1[i] === \"1\" && s2[i] === \"1\" ? \"1\" : \"0\";\n  }\n\n  return parseInt(result.join(\"\"), 2);\n}\n\nvar Convert = {\n  booleanToBytes: function booleanToBytes(input) {\n    if (typeof input !== \"boolean\") {\n      throw new Error(\"Boolean input is expected\");\n    }\n\n    return input ? [1] : [0];\n  },\n  bytesToByteArrayWithSize: function bytesToByteArrayWithSize(input) {\n    if (!(input instanceof Array || input instanceof Uint8Array)) {\n      throw new Error(\"Byte array or Uint8Array input is expected\");\n    } else if (input instanceof Array && !input.every(function (n) {\n      return typeof n === \"number\";\n    })) {\n      throw new Error(\"Byte array contains non-numeric elements\");\n    }\n\n    if (!(input instanceof Array)) {\n      input = Array.prototype.slice.call(input);\n    }\n\n    var lengthBytes = Converters.int16ToBytes(input.length, true);\n    return lengthBytes.concat(input);\n  },\n  shortToByteArray: function shortToByteArray(input) {\n    if (typeof input !== \"number\") {\n      throw new Error(\"Numeric input is expected\");\n    }\n\n    return Converters.int16ToBytes(input, true);\n  },\n  longToByteArray: function longToByteArray(input) {\n    if (typeof input !== \"number\") {\n      throw new Error(\"Numeric input is expected\");\n    }\n\n    var bytes = new Array(7);\n\n    for (var k = 7; k >= 0; k--) {\n      bytes[k] = input & 255;\n      input = input / 256;\n    }\n\n    return bytes;\n  },\n  idxToByteArray: function idxToByteArray(input) {\n    return Converters.int32ToBytes(input, true);\n  },\n  bigNumberToByteArray: function bigNumberToByteArray(input) {\n    if (!(input instanceof BigNumber)) {\n      throw new Error(\"BigNumber input is expected\");\n    }\n\n    var performBitwiseAnd255 = performBitwiseAnd.bind(null, new BigNumber(255));\n    var bytes = new Array(7);\n\n    for (var k = 7; k >= 0; k--) {\n      bytes[k] = performBitwiseAnd255(input);\n      input = input.div(256);\n    }\n\n    return bytes;\n  },\n  stringToByteArray: function stringToByteArray(input) {\n    if (typeof input !== \"string\") {\n      throw new Error(\"String input is expected\");\n    }\n\n    return Converters.stringToByteArray(input);\n  },\n  stringToByteArrayWithSize: function stringToByteArrayWithSize(input) {\n    if (typeof input !== \"string\") {\n      throw new Error(\"String input is expected\");\n    }\n\n    var stringBytes = Converters.stringToByteArray(input);\n    var lengthBytes = Converters.int16ToBytes(stringBytes.length, true);\n    return lengthBytes.concat(stringBytes);\n  }\n};\nexport default Convert;",{"version":3,"sources":["/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/src/libs1/convert.js"],"names":["BigNumber","Converters","performBitwiseAnd","a","b","sa","toString","split","sb","len","Math","min","length","s1","slice","s2","result","Array","i","parseInt","join","Convert","booleanToBytes","input","Error","bytesToByteArrayWithSize","Uint8Array","every","n","prototype","call","lengthBytes","int16ToBytes","concat","shortToByteArray","longToByteArray","bytes","k","idxToByteArray","int32ToBytes","bigNumberToByteArray","performBitwiseAnd255","bind","div","stringToByteArray","stringToByteArrayWithSize","stringBytes"],"mappings":"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","sourcesContent":["// Derived from waves-api\n//\nimport BigNumber from \"bignumber.js\";\nimport Converters from \"./converters\";\n\nfunction performBitwiseAnd(a, b) {\n  let sa = a.toString(2).split(\".\")[0];\n  let sb = b.toString(2).split(\".\")[0];\n  let len = Math.min(sa.length, sb.length);\n  let s1 = sa.slice(sa.length - len);\n  let s2 = sb.slice(sb.length - len);\n  let result = new Array(len);\n  for (let i = len - 1; i >= 0; i--) {\n    result[i] = s1[i] === \"1\" && s2[i] === \"1\" ? \"1\" : \"0\";\n  }\n  return parseInt(result.join(\"\"), 2);\n}\nconst Convert = {\n  booleanToBytes: function(input) {\n    if (typeof input !== \"boolean\") {\n      throw new Error(\"Boolean input is expected\");\n    }\n    return input ? [1] : [0];\n  },\n  bytesToByteArrayWithSize: function(input) {\n    if (!(input instanceof Array || input instanceof Uint8Array)) {\n      throw new Error(\"Byte array or Uint8Array input is expected\");\n    } else if (\n      input instanceof Array &&\n      !input.every(function(n) {\n        return typeof n === \"number\";\n      })\n    ) {\n      throw new Error(\"Byte array contains non-numeric elements\");\n    }\n    if (!(input instanceof Array)) {\n      input = Array.prototype.slice.call(input);\n    }\n    let lengthBytes = Converters.int16ToBytes(input.length, true);\n    return lengthBytes.concat(input);\n  },\n  shortToByteArray: function(input) {\n    if (typeof input !== \"number\") {\n      throw new Error(\"Numeric input is expected\");\n    }\n    return Converters.int16ToBytes(input, true);\n  },\n  longToByteArray: function(input) {\n    if (typeof input !== \"number\") {\n      throw new Error(\"Numeric input is expected\");\n    }\n    let bytes = new Array(7);\n    for (let k = 7; k >= 0; k--) {\n      bytes[k] = input & 255;\n      input = input / 256;\n    }\n    return bytes;\n  },\n  idxToByteArray: function(input) {\n    return Converters.int32ToBytes(input, true);\n  },\n  bigNumberToByteArray: function(input) {\n    if (!(input instanceof BigNumber)) {\n      throw new Error(\"BigNumber input is expected\");\n    }\n    let performBitwiseAnd255 = performBitwiseAnd.bind(null, new BigNumber(255));\n    let bytes = new Array(7);\n    for (let k = 7; k >= 0; k--) {\n      bytes[k] = performBitwiseAnd255(input);\n      input = input.div(256);\n    }\n    return bytes;\n  },\n  stringToByteArray: function(input) {\n    if (typeof input !== \"string\") {\n      throw new Error(\"String input is expected\");\n    }\n    return Converters.stringToByteArray(input);\n  },\n  stringToByteArrayWithSize: function(input) {\n    if (typeof input !== \"string\") {\n      throw new Error(\"String input is expected\");\n    }\n    let stringBytes = Converters.stringToByteArray(input);\n    let lengthBytes = Converters.int16ToBytes(stringBytes.length, true);\n    return lengthBytes.concat(stringBytes);\n  }\n};\n\nexport default Convert;\n"]}]}