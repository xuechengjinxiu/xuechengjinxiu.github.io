{"remainingRequest":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/thread-loader/dist/cjs.js!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/babel-loader/lib/index.js!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/vuetify/lib/components/VCalendar/mixins/times.js","dependencies":[{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/vuetify/lib/components/VCalendar/mixins/times.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport { validateTimestamp, parseTimestamp, parseDate } from '../util/timestamp';\nexport default Vue.extend({\n  name: 'times',\n  props: {\n    now: {\n      type: String,\n      validator: validateTimestamp\n    }\n  },\n  data: () => ({\n    times: {\n      now: parseTimestamp('0000-00-00 00:00'),\n      today: parseTimestamp('0000-00-00')\n    }\n  }),\n  computed: {\n    parsedNow() {\n      return this.now ? parseTimestamp(this.now) : null;\n    }\n\n  },\n  watch: {\n    parsedNow: 'updateTimes'\n  },\n\n  created() {\n    this.updateTimes();\n    this.setPresent();\n  },\n\n  methods: {\n    setPresent() {\n      this.times.now.present = this.times.today.present = true;\n      this.times.now.past = this.times.today.past = false;\n      this.times.now.future = this.times.today.future = false;\n    },\n\n    updateTimes() {\n      const now = this.parsedNow || this.getNow();\n      this.updateDay(now, this.times.now);\n      this.updateTime(now, this.times.now);\n      this.updateDay(now, this.times.today);\n    },\n\n    getNow() {\n      return parseDate(new Date());\n    },\n\n    updateDay(now, target) {\n      if (now.date !== target.date) {\n        target.year = now.year;\n        target.month = now.month;\n        target.day = now.day;\n        target.weekday = now.weekday;\n        target.date = now.date;\n      }\n    },\n\n    updateTime(now, target) {\n      if (now.time !== target.time) {\n        target.hour = now.hour;\n        target.minute = now.minute;\n        target.time = now.time;\n      }\n    }\n\n  }\n});",null]}