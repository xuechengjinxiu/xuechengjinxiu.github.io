{"remainingRequest":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/thread-loader/dist/cjs.js!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/babel-loader/lib/index.js!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/vuetify/lib/services/theme/utils.js","dependencies":[{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/vuetify/lib/services/theme/utils.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport _slicedToArray from \"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _typeof from \"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\nimport \"core-js/modules/es6.string.starts-with\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.string.anchor\";\nimport _objectWithoutProperties from \"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport { colorToInt, intToHex, colorToHex } from \"../../util/colorUtils\";\nimport * as sRGB from \"../../util/color/transformSRGB\";\nimport * as LAB from \"../../util/color/transformCIELAB\";\nexport function parse(theme) {\n  var isItem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var anchor = theme.anchor,\n      variant = _objectWithoutProperties(theme, [\"anchor\"]);\n\n  var colors = Object.keys(variant);\n  var parsedTheme = {};\n\n  for (var i = 0; i < colors.length; ++i) {\n    var name = colors[i];\n    var value = theme[name];\n    if (value == null) continue;\n\n    if (isItem) {\n      /* istanbul ignore else */\n      if (name === 'base' || name.startsWith('lighten') || name.startsWith('darken')) {\n        parsedTheme[name] = colorToHex(value);\n      }\n    } else if (_typeof(value) === 'object') {\n      parsedTheme[name] = parse(value, true);\n    } else {\n      parsedTheme[name] = genVariations(name, colorToInt(value));\n    }\n  }\n\n  if (!isItem) {\n    parsedTheme.anchor = anchor || parsedTheme.base || parsedTheme.primary.base;\n  }\n\n  return parsedTheme;\n}\n/**\n * Generate the CSS for a base color (.primary)\n */\n\nvar genBaseColor = function genBaseColor(name, value) {\n  return \"\\n.v-application .\".concat(name, \" {\\n  background-color: \").concat(value, \" !important;\\n  border-color: \").concat(value, \" !important;\\n}\\n.v-application .\").concat(name, \"--text {\\n  color: \").concat(value, \" !important;\\n  caret-color: \").concat(value, \" !important;\\n}\");\n};\n/**\n * Generate the CSS for a variant color (.primary.darken-2)\n */\n\n\nvar genVariantColor = function genVariantColor(name, variant, value) {\n  var _variant$split = variant.split(/(\\d)/, 2),\n      _variant$split2 = _slicedToArray(_variant$split, 2),\n      type = _variant$split2[0],\n      n = _variant$split2[1];\n\n  return \"\\n.v-application .\".concat(name, \".\").concat(type, \"-\").concat(n, \" {\\n  background-color: \").concat(value, \" !important;\\n  border-color: \").concat(value, \" !important;\\n}\\n.v-application .\").concat(name, \"--text.text--\").concat(type, \"-\").concat(n, \" {\\n  color: \").concat(value, \" !important;\\n  caret-color: \").concat(value, \" !important;\\n}\");\n};\n\nvar genColorVariableName = function genColorVariableName(name) {\n  var variant = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'base';\n  return \"--v-\".concat(name, \"-\").concat(variant);\n};\n\nvar genColorVariable = function genColorVariable(name) {\n  var variant = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'base';\n  return \"var(\".concat(genColorVariableName(name, variant), \")\");\n};\n\nexport function genStyles(theme) {\n  var cssVar = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var anchor = theme.anchor,\n      variant = _objectWithoutProperties(theme, [\"anchor\"]);\n\n  var colors = Object.keys(variant);\n  if (!colors.length) return '';\n  var variablesCss = '';\n  var css = '';\n  var aColor = cssVar ? genColorVariable('anchor') : anchor;\n  css += \".v-application a { color: \".concat(aColor, \"; }\");\n  cssVar && (variablesCss += \"  \".concat(genColorVariableName('anchor'), \": \").concat(anchor, \";\\n\"));\n\n  for (var i = 0; i < colors.length; ++i) {\n    var name = colors[i];\n    var value = theme[name];\n    css += genBaseColor(name, cssVar ? genColorVariable(name) : value.base);\n    cssVar && (variablesCss += \"  \".concat(genColorVariableName(name), \": \").concat(value.base, \";\\n\"));\n    var variants = Object.keys(value);\n\n    for (var _i = 0; _i < variants.length; ++_i) {\n      var _variant = variants[_i];\n      var variantValue = value[_variant];\n      if (_variant === 'base') continue;\n      css += genVariantColor(name, _variant, cssVar ? genColorVariable(name, _variant) : variantValue);\n      cssVar && (variablesCss += \"  \".concat(genColorVariableName(name, _variant), \": \").concat(variantValue, \";\\n\"));\n    }\n  }\n\n  if (cssVar) {\n    variablesCss = \":root {\\n\".concat(variablesCss, \"}\\n\\n\");\n  }\n\n  return variablesCss + css;\n}\nexport function genVariations(name, value) {\n  var values = {\n    base: intToHex(value)\n  };\n\n  for (var i = 5; i > 0; --i) {\n    values[\"lighten\".concat(i)] = intToHex(lighten(value, i));\n  }\n\n  for (var _i2 = 1; _i2 <= 4; ++_i2) {\n    values[\"darken\".concat(_i2)] = intToHex(darken(value, _i2));\n  }\n\n  return values;\n}\n\nfunction lighten(value, amount) {\n  var lab = LAB.fromXYZ(sRGB.toXYZ(value));\n  lab[0] = lab[0] + amount * 10;\n  return sRGB.fromXYZ(LAB.toXYZ(lab));\n}\n\nfunction darken(value, amount) {\n  var lab = LAB.fromXYZ(sRGB.toXYZ(value));\n  lab[0] = lab[0] - amount * 10;\n  return sRGB.fromXYZ(LAB.toXYZ(lab));\n}",null]}