{"remainingRequest":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/babel-loader/lib/index.js!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/eslint-loader/index.js??ref--13-0!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/src/store.js","dependencies":[{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/src/store.js","mtime":1585119550000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport utils from \"@/utils/common.js\";\nimport axios from \"axios\";\nVue.use(Vuex);\nvar initState = {\n  password: \"\",\n  seed: \"\",\n  walletCount: 0,\n  currentIndex: 0,\n  wallets: [],\n  sendInfo: {},\n  isHeaderOpen: false,\n  loginType: \"\"\n};\nexport default new Vuex.Store({\n  state: utils.deepClone(initState),\n  mutations: {\n    ADD_INFO: function ADD_INFO(state, data) {\n      for (var i in data) {\n        //If not exist, use Vue.set\n        if (!state[i]) {\n          Vue.set(state, i, data[i]);\n        } else {\n          state[i] = data[i];\n        }\n      }\n    },\n    add_wallets: function add_wallets(state, data) {\n      Vue.set(state.wallets, data.index, data.data);\n    },\n    update_balance: function update_balance(state, data) {\n      state.wallets[data.index].balance = data.balance;\n      state.wallets[data.index].transactionCount = data.transactionCount;\n      state.wallets[data.index].updateTime = new Date().getTime();\n    },\n    update_wallet: function update_wallet(state, data) {\n      for (var key in data) {\n        if (key !== \"index\") {\n          state.wallets[data.index][key] = data[key];\n        }\n      }\n    },\n    update_loginType: function update_loginType(state, data) {\n      state.loginType = data;\n    },\n    update_sendInfo: function update_sendInfo(state, data) {\n      for (var key in data) {\n        state.sendInfo[key] = data[key];\n      }\n    },\n    reset_sendinfo: function reset_sendinfo(state) {\n      var keys = [\"recipient\", \"amount\", \"description\"];\n      keys.forEach(function (k) {\n        state.sendInfo[k] = \"\";\n      });\n    },\n    update_header: function update_header(state, data) {\n      state.isHeaderOpen = data;\n    },\n    // requestTokenInfo:({state})=>{\n    //\n    // }\n    reset_state: function reset_state(state) {\n      Object.assign(state, utils.deepClone(initState));\n    }\n  },\n  getters: {\n    currentWallet: function currentWallet(state) {\n      return state.wallets[state.currentIndex];\n    },\n    balance: function balance(state) {\n      if (!state.wallets[state.currentIndex].balance || !state.unity) return 0;\n      return utils.getBalance(state.wallets[state.currentIndex].balance, state.unity);\n    }\n  },\n  actions: {\n    update_balance: function update_balance(_ref, data) {\n      var commit = _ref.commit,\n          state = _ref.state;\n      axios.get(\"token/\".concat(data.tokenId, \"/address/\").concat(state.wallets[data.index].address)).then(function (response) {\n        if (response.data.result) {\n          commit(\"update_balance\", {\n            index: data.index,\n            balance: response.data.result.balance,\n            transactionCount: response.data.result.transactionCount\n          });\n        }\n      }).catch(function () {\n        // console.log(response);\n        commit(\"update_balance\", {\n          index: data.index,\n          balance: 0,\n          transactionCount: 0\n        });\n      });\n    },\n    update_token: function update_token(_ref2, tokenId) {\n      var commit = _ref2.commit;\n      axios.get(\"token/\".concat(tokenId)).then(function (res) {\n        if (res && res.data && res.data.result) {\n          commit(\"ADD_INFO\", {\n            unity: res.data.result.unity,\n            canSplit: res.data.result.canSplit\n          });\n        }\n      }).catch(function (err) {\n        console.log(\"err: \", err);\n      });\n    },\n    update_vsys: function update_vsys(_ref3, index) {\n      var commit = _ref3.commit,\n          state = _ref3.state;\n      axios.get(\"\".concat(Vue.prototype.$config.vsysEndPoint, \"/addresses/balance/\").concat(state.wallets[state.currentIndex].address)).then(function (res) {\n        if (res.data) {\n          commit(\"update_wallet\", {\n            index: index,\n            vsysBalance: res.data.balance / 100000000\n          });\n        }\n      }).catch(function (err) {\n        console.log(err);\n      });\n    },\n    reset_state: function reset_state(context) {\n      context.commit(\"reset_state\");\n    } //    requestTokenInfo:(context)=>{\n    //     context.commit('requestTokenInfo')\n    //   }\n\n  }\n});",{"version":3,"sources":["/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/src/store.js"],"names":["Vue","Vuex","utils","axios","use","initState","password","seed","walletCount","currentIndex","wallets","sendInfo","isHeaderOpen","loginType","Store","state","deepClone","mutations","ADD_INFO","data","i","set","add_wallets","index","update_balance","balance","transactionCount","updateTime","Date","getTime","update_wallet","key","update_loginType","update_sendInfo","reset_sendinfo","keys","forEach","k","update_header","reset_state","Object","assign","getters","currentWallet","unity","getBalance","actions","commit","get","tokenId","address","then","response","result","catch","update_token","res","canSplit","err","console","log","update_vsys","prototype","$config","vsysEndPoint","vsysBalance","context"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEAH,GAAG,CAACI,GAAJ,CAAQH,IAAR;AACA,IAAMI,SAAS,GAAG;AAChBC,EAAAA,QAAQ,EAAE,EADM;AAEhBC,EAAAA,IAAI,EAAE,EAFU;AAGhBC,EAAAA,WAAW,EAAE,CAHG;AAIhBC,EAAAA,YAAY,EAAE,CAJE;AAKhBC,EAAAA,OAAO,EAAE,EALO;AAMhBC,EAAAA,QAAQ,EAAE,EANM;AAOhBC,EAAAA,YAAY,EAAE,KAPE;AAQhBC,EAAAA,SAAS,EAAE;AARK,CAAlB;AAWA,eAAe,IAAIZ,IAAI,CAACa,KAAT,CAAe;AAC5BC,EAAAA,KAAK,EAAEb,KAAK,CAACc,SAAN,CAAgBX,SAAhB,CADqB;AAE5BY,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,EAAE,kBAACH,KAAD,EAAQI,IAAR,EAAiB;AACzB,WAAK,IAAIC,CAAT,IAAcD,IAAd,EAAoB;AAClB;AACA,YAAI,CAACJ,KAAK,CAACK,CAAD,CAAV,EAAe;AACbpB,UAAAA,GAAG,CAACqB,GAAJ,CAAQN,KAAR,EAAeK,CAAf,EAAkBD,IAAI,CAACC,CAAD,CAAtB;AACD,SAFD,MAEO;AACLL,UAAAA,KAAK,CAACK,CAAD,CAAL,GAAWD,IAAI,CAACC,CAAD,CAAf;AACD;AACF;AACF,KAVQ;AAWTE,IAAAA,WAAW,EAAE,qBAACP,KAAD,EAAQI,IAAR,EAAiB;AAC5BnB,MAAAA,GAAG,CAACqB,GAAJ,CAAQN,KAAK,CAACL,OAAd,EAAuBS,IAAI,CAACI,KAA5B,EAAmCJ,IAAI,CAACA,IAAxC;AACD,KAbQ;AAcTK,IAAAA,cAAc,EAAE,wBAACT,KAAD,EAAQI,IAAR,EAAiB;AAC/BJ,MAAAA,KAAK,CAACL,OAAN,CAAcS,IAAI,CAACI,KAAnB,EAA0BE,OAA1B,GAAoCN,IAAI,CAACM,OAAzC;AACAV,MAAAA,KAAK,CAACL,OAAN,CAAcS,IAAI,CAACI,KAAnB,EAA0BG,gBAA1B,GAA6CP,IAAI,CAACO,gBAAlD;AACAX,MAAAA,KAAK,CAACL,OAAN,CAAcS,IAAI,CAACI,KAAnB,EAA0BI,UAA1B,GAAuC,IAAIC,IAAJ,GAAWC,OAAX,EAAvC;AACD,KAlBQ;AAmBTC,IAAAA,aAAa,EAAE,uBAACf,KAAD,EAAQI,IAAR,EAAiB;AAC9B,WAAK,IAAIY,GAAT,IAAgBZ,IAAhB,EAAsB;AACpB,YAAIY,GAAG,KAAK,OAAZ,EAAqB;AACnBhB,UAAAA,KAAK,CAACL,OAAN,CAAcS,IAAI,CAACI,KAAnB,EAA0BQ,GAA1B,IAAiCZ,IAAI,CAACY,GAAD,CAArC;AACD;AACF;AACF,KAzBQ;AA0BTC,IAAAA,gBAAgB,EAAE,0BAACjB,KAAD,EAAQI,IAAR,EAAiB;AACjCJ,MAAAA,KAAK,CAACF,SAAN,GAAkBM,IAAlB;AACD,KA5BQ;AA6BTc,IAAAA,eAAe,EAAE,yBAAClB,KAAD,EAAQI,IAAR,EAAiB;AAChC,WAAK,IAAIY,GAAT,IAAgBZ,IAAhB,EAAsB;AACpBJ,QAAAA,KAAK,CAACJ,QAAN,CAAeoB,GAAf,IAAsBZ,IAAI,CAACY,GAAD,CAA1B;AACD;AACF,KAjCQ;AAkCTG,IAAAA,cAAc,EAAE,wBAAAnB,KAAK,EAAI;AACvB,UAAMoB,IAAI,GAAG,CAAC,WAAD,EAAc,QAAd,EAAwB,aAAxB,CAAb;AACAA,MAAAA,IAAI,CAACC,OAAL,CAAa,UAAAC,CAAC,EAAI;AAChBtB,QAAAA,KAAK,CAACJ,QAAN,CAAe0B,CAAf,IAAoB,EAApB;AACD,OAFD;AAGD,KAvCQ;AAwCTC,IAAAA,aAAa,EAAE,uBAACvB,KAAD,EAAQI,IAAR,EAAiB;AAC9BJ,MAAAA,KAAK,CAACH,YAAN,GAAqBO,IAArB;AACD,KA1CQ;AA2CT;AACA;AACA;AACAoB,IAAAA,WAAW,EAAE,qBAAAxB,KAAK,EAAI;AACpByB,MAAAA,MAAM,CAACC,MAAP,CAAc1B,KAAd,EAAqBb,KAAK,CAACc,SAAN,CAAgBX,SAAhB,CAArB;AACD;AAhDQ,GAFiB;AAoD5BqC,EAAAA,OAAO,EAAE;AACPC,IAAAA,aADO,yBACO5B,KADP,EACc;AACnB,aAAOA,KAAK,CAACL,OAAN,CAAcK,KAAK,CAACN,YAApB,CAAP;AACD,KAHM;AAIPgB,IAAAA,OAJO,mBAICV,KAJD,EAIQ;AACb,UAAI,CAACA,KAAK,CAACL,OAAN,CAAcK,KAAK,CAACN,YAApB,EAAkCgB,OAAnC,IAA8C,CAACV,KAAK,CAAC6B,KAAzD,EAAgE,OAAO,CAAP;AAChE,aAAO1C,KAAK,CAAC2C,UAAN,CACL9B,KAAK,CAACL,OAAN,CAAcK,KAAK,CAACN,YAApB,EAAkCgB,OAD7B,EAELV,KAAK,CAAC6B,KAFD,CAAP;AAID;AAVM,GApDmB;AAgE5BE,EAAAA,OAAO,EAAE;AACPtB,IAAAA,cAAc,EAAE,8BAAoBL,IAApB,EAA6B;AAAA,UAA1B4B,MAA0B,QAA1BA,MAA0B;AAAA,UAAlBhC,KAAkB,QAAlBA,KAAkB;AAC3CZ,MAAAA,KAAK,CACF6C,GADH,iBAEa7B,IAAI,CAAC8B,OAFlB,sBAEqClC,KAAK,CAACL,OAAN,CAAcS,IAAI,CAACI,KAAnB,EAA0B2B,OAF/D,GAIGC,IAJH,CAIQ,UAAAC,QAAQ,EAAI;AAChB,YAAIA,QAAQ,CAACjC,IAAT,CAAckC,MAAlB,EAA0B;AACxBN,UAAAA,MAAM,CAAC,gBAAD,EAAmB;AACvBxB,YAAAA,KAAK,EAAEJ,IAAI,CAACI,KADW;AAEvBE,YAAAA,OAAO,EAAE2B,QAAQ,CAACjC,IAAT,CAAckC,MAAd,CAAqB5B,OAFP;AAGvBC,YAAAA,gBAAgB,EAAE0B,QAAQ,CAACjC,IAAT,CAAckC,MAAd,CAAqB3B;AAHhB,WAAnB,CAAN;AAKD;AACF,OAZH,EAaG4B,KAbH,CAaS,YAAM;AACX;AACAP,QAAAA,MAAM,CAAC,gBAAD,EAAmB;AACvBxB,UAAAA,KAAK,EAAEJ,IAAI,CAACI,KADW;AAEvBE,UAAAA,OAAO,EAAE,CAFc;AAGvBC,UAAAA,gBAAgB,EAAE;AAHK,SAAnB,CAAN;AAKD,OApBH;AAqBD,KAvBM;AAwBP6B,IAAAA,YAAY,EAAE,6BAAaN,OAAb,EAAyB;AAAA,UAAtBF,MAAsB,SAAtBA,MAAsB;AACrC5C,MAAAA,KAAK,CACF6C,GADH,iBACgBC,OADhB,GAEGE,IAFH,CAEQ,UAAAK,GAAG,EAAI;AACX,YAAIA,GAAG,IAAIA,GAAG,CAACrC,IAAX,IAAmBqC,GAAG,CAACrC,IAAJ,CAASkC,MAAhC,EAAwC;AACtCN,UAAAA,MAAM,CAAC,UAAD,EAAa;AACjBH,YAAAA,KAAK,EAAEY,GAAG,CAACrC,IAAJ,CAASkC,MAAT,CAAgBT,KADN;AAEjBa,YAAAA,QAAQ,EAAED,GAAG,CAACrC,IAAJ,CAASkC,MAAT,CAAgBI;AAFT,WAAb,CAAN;AAID;AACF,OATH,EAUGH,KAVH,CAUS,UAAAI,GAAG,EAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,GAArB;AACD,OAZH;AAaD,KAtCM;AAuCPG,IAAAA,WAAW,EAAE,4BAAoBtC,KAApB,EAA8B;AAAA,UAA3BwB,MAA2B,SAA3BA,MAA2B;AAAA,UAAnBhC,KAAmB,SAAnBA,KAAmB;AACzCZ,MAAAA,KAAK,CACF6C,GADH,WAEOhD,GAAG,CAAC8D,SAAJ,CAAcC,OAAd,CAAsBC,YAF7B,gCAGMjD,KAAK,CAACL,OAAN,CAAcK,KAAK,CAACN,YAApB,EAAkCyC,OAHxC,GAMGC,IANH,CAMQ,UAAAK,GAAG,EAAI;AACX,YAAIA,GAAG,CAACrC,IAAR,EAAc;AACZ4B,UAAAA,MAAM,CAAC,eAAD,EAAkB;AACtBxB,YAAAA,KAAK,EAAEA,KADe;AAEtB0C,YAAAA,WAAW,EAAET,GAAG,CAACrC,IAAJ,CAASM,OAAT,GAAmB;AAFV,WAAlB,CAAN;AAID;AACF,OAbH,EAcG6B,KAdH,CAcS,UAAAI,GAAG,EAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,OAhBH;AAiBD,KAzDM;AA0DPnB,IAAAA,WAAW,EAAE,qBAAA2B,OAAO,EAAI;AACtBA,MAAAA,OAAO,CAACnB,MAAR,CAAe,aAAf;AACD,KA5DM,CA6DP;AACA;AACA;;AA/DO;AAhEmB,CAAf,CAAf","sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport utils from \"@/utils/common.js\";\nimport axios from \"axios\";\n\nVue.use(Vuex);\nconst initState = {\n  password: \"\",\n  seed: \"\",\n  walletCount: 0,\n  currentIndex: 0,\n  wallets: [],\n  sendInfo: {},\n  isHeaderOpen: false,\n  loginType: \"\"\n};\n\nexport default new Vuex.Store({\n  state: utils.deepClone(initState),\n  mutations: {\n    ADD_INFO: (state, data) => {\n      for (let i in data) {\n        //If not exist, use Vue.set\n        if (!state[i]) {\n          Vue.set(state, i, data[i]);\n        } else {\n          state[i] = data[i];\n        }\n      }\n    },\n    add_wallets: (state, data) => {\n      Vue.set(state.wallets, data.index, data.data);\n    },\n    update_balance: (state, data) => {\n      state.wallets[data.index].balance = data.balance;\n      state.wallets[data.index].transactionCount = data.transactionCount;\n      state.wallets[data.index].updateTime = new Date().getTime();\n    },\n    update_wallet: (state, data) => {\n      for (let key in data) {\n        if (key !== \"index\") {\n          state.wallets[data.index][key] = data[key];\n        }\n      }\n    },\n    update_loginType: (state, data) => {\n      state.loginType = data;\n    },\n    update_sendInfo: (state, data) => {\n      for (let key in data) {\n        state.sendInfo[key] = data[key];\n      }\n    },\n    reset_sendinfo: state => {\n      const keys = [\"recipient\", \"amount\", \"description\"];\n      keys.forEach(k => {\n        state.sendInfo[k] = \"\";\n      });\n    },\n    update_header: (state, data) => {\n      state.isHeaderOpen = data;\n    },\n    // requestTokenInfo:({state})=>{\n    //\n    // }\n    reset_state: state => {\n      Object.assign(state, utils.deepClone(initState));\n    }\n  },\n  getters: {\n    currentWallet(state) {\n      return state.wallets[state.currentIndex];\n    },\n    balance(state) {\n      if (!state.wallets[state.currentIndex].balance || !state.unity) return 0;\n      return utils.getBalance(\n        state.wallets[state.currentIndex].balance,\n        state.unity\n      );\n    }\n  },\n  actions: {\n    update_balance: ({ commit, state }, data) => {\n      axios\n        .get(\n          `token/${data.tokenId}/address/${state.wallets[data.index].address}`\n        )\n        .then(response => {\n          if (response.data.result) {\n            commit(\"update_balance\", {\n              index: data.index,\n              balance: response.data.result.balance,\n              transactionCount: response.data.result.transactionCount\n            });\n          }\n        })\n        .catch(() => {\n          // console.log(response);\n          commit(\"update_balance\", {\n            index: data.index,\n            balance: 0,\n            transactionCount: 0\n          });\n        });\n    },\n    update_token: ({ commit }, tokenId) => {\n      axios\n        .get(`token/${tokenId}`)\n        .then(res => {\n          if (res && res.data && res.data.result) {\n            commit(\"ADD_INFO\", {\n              unity: res.data.result.unity,\n              canSplit: res.data.result.canSplit\n            });\n          }\n        })\n        .catch(err => {\n          console.log(\"err: \", err);\n        });\n    },\n    update_vsys: ({ commit, state }, index) => {\n      axios\n        .get(\n          `${Vue.prototype.$config.vsysEndPoint}/addresses/balance/${\n            state.wallets[state.currentIndex].address\n          }`\n        )\n        .then(res => {\n          if (res.data) {\n            commit(\"update_wallet\", {\n              index: index,\n              vsysBalance: res.data.balance / 100000000\n            });\n          }\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    },\n    reset_state: context => {\n      context.commit(\"reset_state\");\n    }\n    //    requestTokenInfo:(context)=>{\n    //     context.commit('requestTokenInfo')\n    //   }\n  }\n});\n"]}]}