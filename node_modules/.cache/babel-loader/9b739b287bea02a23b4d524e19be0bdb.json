{"remainingRequest":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/thread-loader/dist/cjs.js!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/babel-loader/lib/index.js!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/vuetify/lib/components/VInput/VInput.js","dependencies":[{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/vuetify/lib/components/VInput/VInput.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Styles\nimport \"../../../src/components/VInput/VInput.sass\"; // Components\n\nimport VIcon from \"../VIcon\";\nimport VLabel from \"../VLabel\";\nimport VMessages from \"../VMessages\"; // Mixins\n\nimport Validatable from \"../../mixins/validatable\"; // Utilities\n\nimport { convertToUnit, kebabCase } from \"../../util/helpers\";\nimport mixins from \"../../util/mixins\";\nvar baseMixins = mixins(Validatable);\n/* @vue/component */\n\nexport default baseMixins.extend().extend({\n  name: 'v-input',\n  inheritAttrs: false,\n  props: {\n    appendIcon: String,\n    backgroundColor: {\n      type: String,\n      default: ''\n    },\n    height: [Number, String],\n    hideDetails: Boolean,\n    hint: String,\n    id: String,\n    label: String,\n    loading: Boolean,\n    persistentHint: Boolean,\n    prependIcon: String,\n    value: null\n  },\n  data: function data() {\n    return {\n      lazyValue: this.value,\n      hasMouseDown: false\n    };\n  },\n  computed: {\n    classes: function classes() {\n      return _objectSpread({\n        'v-input--has-state': this.hasState,\n        'v-input--hide-details': this.hideDetails,\n        'v-input--is-label-active': this.isLabelActive,\n        'v-input--is-dirty': this.isDirty,\n        'v-input--is-disabled': this.disabled,\n        'v-input--is-focused': this.isFocused,\n        'v-input--is-loading': this.loading !== false && this.loading !== undefined,\n        'v-input--is-readonly': this.readonly\n      }, this.themeClasses);\n    },\n    computedId: function computedId() {\n      return this.id || \"input-\".concat(this._uid);\n    },\n    hasHint: function hasHint() {\n      return !this.hasMessages && !!this.hint && (this.persistentHint || this.isFocused);\n    },\n    hasLabel: function hasLabel() {\n      return !!(this.$slots.label || this.label);\n    },\n    // Proxy for `lazyValue`\n    // This allows an input\n    // to function without\n    // a provided model\n    internalValue: {\n      get: function get() {\n        return this.lazyValue;\n      },\n      set: function set(val) {\n        this.lazyValue = val;\n        this.$emit(this.$_modelEvent, val);\n      }\n    },\n    isDirty: function isDirty() {\n      return !!this.lazyValue;\n    },\n    isDisabled: function isDisabled() {\n      return this.disabled || this.readonly;\n    },\n    isLabelActive: function isLabelActive() {\n      return this.isDirty;\n    }\n  },\n  watch: {\n    value: function value(val) {\n      this.lazyValue = val;\n    }\n  },\n  beforeCreate: function beforeCreate() {\n    // v-radio-group needs to emit a different event\n    // https://github.com/vuetifyjs/vuetify/issues/4752\n    this.$_modelEvent = this.$options.model && this.$options.model.event || 'input';\n  },\n  methods: {\n    genContent: function genContent() {\n      return [this.genPrependSlot(), this.genControl(), this.genAppendSlot()];\n    },\n    genControl: function genControl() {\n      return this.$createElement('div', {\n        staticClass: 'v-input__control'\n      }, [this.genInputSlot(), this.genMessages()]);\n    },\n    genDefaultSlot: function genDefaultSlot() {\n      return [this.genLabel(), this.$slots.default];\n    },\n    genIcon: function genIcon(type, cb) {\n      var _this = this;\n\n      var icon = this[\"\".concat(type, \"Icon\")];\n      var eventName = \"click:\".concat(kebabCase(type));\n      var data = {\n        props: {\n          color: this.validationState,\n          dark: this.dark,\n          disabled: this.disabled,\n          light: this.light\n        },\n        on: !(this.$listeners[eventName] || cb) ? undefined : {\n          click: function click(e) {\n            e.preventDefault();\n            e.stopPropagation();\n\n            _this.$emit(eventName, e);\n\n            cb && cb(e);\n          },\n          // Container has g event that will\n          // trigger menu open if enclosed\n          mouseup: function mouseup(e) {\n            e.preventDefault();\n            e.stopPropagation();\n          }\n        }\n      };\n      return this.$createElement('div', {\n        staticClass: \"v-input__icon v-input__icon--\".concat(kebabCase(type)),\n        key: type + icon\n      }, [this.$createElement(VIcon, data, icon)]);\n    },\n    genInputSlot: function genInputSlot() {\n      return this.$createElement('div', this.setBackgroundColor(this.backgroundColor, {\n        staticClass: 'v-input__slot',\n        style: {\n          height: convertToUnit(this.height)\n        },\n        on: {\n          click: this.onClick,\n          mousedown: this.onMouseDown,\n          mouseup: this.onMouseUp\n        },\n        ref: 'input-slot'\n      }), [this.genDefaultSlot()]);\n    },\n    genLabel: function genLabel() {\n      if (!this.hasLabel) return null;\n      return this.$createElement(VLabel, {\n        props: {\n          color: this.validationState,\n          dark: this.dark,\n          focused: this.hasState,\n          for: this.computedId,\n          light: this.light\n        }\n      }, this.$slots.label || this.label);\n    },\n    genMessages: function genMessages() {\n      if (this.hideDetails) return null;\n      var messages = this.hasHint ? [this.hint] : this.validations;\n      return this.$createElement(VMessages, {\n        props: {\n          color: this.hasHint ? '' : this.validationState,\n          dark: this.dark,\n          light: this.light,\n          value: this.hasMessages || this.hasHint ? messages : []\n        }\n      });\n    },\n    genSlot: function genSlot(type, location, slot) {\n      if (!slot.length) return null;\n      var ref = \"\".concat(type, \"-\").concat(location);\n      return this.$createElement('div', {\n        staticClass: \"v-input__\".concat(ref),\n        ref: ref\n      }, slot);\n    },\n    genPrependSlot: function genPrependSlot() {\n      var slot = [];\n\n      if (this.$slots.prepend) {\n        slot.push(this.$slots.prepend);\n      } else if (this.prependIcon) {\n        slot.push(this.genIcon('prepend'));\n      }\n\n      return this.genSlot('prepend', 'outer', slot);\n    },\n    genAppendSlot: function genAppendSlot() {\n      var slot = []; // Append icon for text field was really\n      // an appended inner icon, v-text-field\n      // will overwrite this method in order to obtain\n      // backwards compat\n\n      if (this.$slots.append) {\n        slot.push(this.$slots.append);\n      } else if (this.appendIcon) {\n        slot.push(this.genIcon('append'));\n      }\n\n      return this.genSlot('append', 'outer', slot);\n    },\n    onClick: function onClick(e) {\n      this.$emit('click', e);\n    },\n    onMouseDown: function onMouseDown(e) {\n      this.hasMouseDown = true;\n      this.$emit('mousedown', e);\n    },\n    onMouseUp: function onMouseUp(e) {\n      this.hasMouseDown = false;\n      this.$emit('mouseup', e);\n    }\n  },\n  render: function render(h) {\n    return h('div', this.setTextColor(this.validationState, {\n      staticClass: 'v-input',\n      class: this.classes\n    }), this.genContent());\n  }\n});",null]}