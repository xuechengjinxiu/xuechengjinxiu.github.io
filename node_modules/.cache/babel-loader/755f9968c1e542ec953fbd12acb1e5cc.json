{"remainingRequest":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/thread-loader/dist/cjs.js!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/babel-loader/lib/index.js!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/vuetify/lib/components/VCalendar/util/events.js","dependencies":[{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/vuetify/lib/components/VCalendar/util/events.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { parseTimestamp, getDayIdentifier, getTimestampIdentifier } from \"./timestamp\";\nexport function parseEvent(input, index, startProperty, endProperty) {\n  if (!(startProperty in input)) {\n    throw new Error('The ' + startProperty + ' property is required on all events to be a valid timestamp in the format YYYY-MM-DD or YYYY-MM-DD hh:mm');\n  }\n\n  var start = parseTimestamp(input[startProperty]);\n  var end = input[endProperty] ? parseTimestamp(input[endProperty]) : start;\n  var startIdentifier = getDayIdentifier(start);\n  var startTimestampIdentifier = getTimestampIdentifier(start);\n  var endIdentifier = getDayIdentifier(end);\n  var endTimestampIdentifier = getTimestampIdentifier(end);\n  var allDay = !start.hasTime;\n  return {\n    input: input,\n    start: start,\n    startIdentifier: startIdentifier,\n    startTimestampIdentifier: startTimestampIdentifier,\n    end: end,\n    endIdentifier: endIdentifier,\n    endTimestampIdentifier: endTimestampIdentifier,\n    allDay: allDay,\n    index: index\n  };\n}\nexport function isEventOn(event, dayIdentifier) {\n  return dayIdentifier >= event.startIdentifier && dayIdentifier <= event.endIdentifier;\n}\nexport function isEventOverlapping(event, startIdentifier, endIdentifier) {\n  return startIdentifier <= event.endIdentifier && endIdentifier >= event.startIdentifier;\n}",null]}