{"remainingRequest":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/thread-loader/dist/cjs.js!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/babel-loader/lib/index.js!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/vuetify/lib/components/VAlert/VAlert.js","dependencies":[{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/vuetify/lib/components/VAlert/VAlert.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Styles\nimport \"../../../src/components/VAlert/VAlert.sass\"; // Extensions\n\nimport VSheet from \"../VSheet\"; // Components\n\nimport VBtn from \"../VBtn\";\nimport VIcon from \"../VIcon\"; // Mixins\n\nimport Toggleable from \"../../mixins/toggleable\";\nimport Themeable from \"../../mixins/themeable\";\nimport Transitionable from \"../../mixins/transitionable\"; // Utilities\n\nimport mixins from \"../../util/mixins\";\nimport { breaking } from \"../../util/console\";\n/* @vue/component */\n\nexport default mixins(VSheet, Toggleable, Transitionable).extend({\n  name: 'v-alert',\n  props: {\n    border: {\n      type: String,\n      validator: function validator(val) {\n        return ['top', 'right', 'bottom', 'left'].includes(val);\n      }\n    },\n    closeLabel: {\n      type: String,\n      default: '$vuetify.close'\n    },\n    coloredBorder: Boolean,\n    dense: Boolean,\n    dismissible: Boolean,\n    icon: {\n      default: '',\n      type: [Boolean, String],\n      validator: function validator(val) {\n        return typeof val === 'string' || val === false;\n      }\n    },\n    outlined: Boolean,\n    prominent: Boolean,\n    text: Boolean,\n    type: {\n      type: String,\n      validator: function validator(val) {\n        return ['info', 'error', 'success', 'warning'].includes(val);\n      }\n    },\n    value: {\n      type: Boolean,\n      default: true\n    }\n  },\n  computed: {\n    __cachedBorder: function __cachedBorder() {\n      if (!this.border) return null;\n      var data = {\n        staticClass: 'v-alert__border',\n        class: _defineProperty({}, \"v-alert__border--\".concat(this.border), true)\n      };\n\n      if (this.coloredBorder) {\n        data = this.setBackgroundColor(this.computedColor, data);\n        data.class['v-alert__border--has-color'] = true;\n      }\n\n      return this.$createElement('div', data);\n    },\n    __cachedDismissible: function __cachedDismissible() {\n      var _this = this;\n\n      if (!this.dismissible) return null;\n      var color = this.iconColor;\n      return this.$createElement(VBtn, {\n        staticClass: 'v-alert__dismissible',\n        props: {\n          color: color,\n          icon: true,\n          small: true\n        },\n        attrs: {\n          'aria-label': this.$vuetify.lang.t(this.closeLabel)\n        },\n        on: {\n          click: function click() {\n            return _this.isActive = false;\n          }\n        }\n      }, [this.$createElement(VIcon, {\n        props: {\n          color: color\n        }\n      }, '$vuetify.icons.cancel')]);\n    },\n    __cachedIcon: function __cachedIcon() {\n      if (!this.computedIcon) return null;\n      return this.$createElement(VIcon, {\n        staticClass: 'v-alert__icon',\n        props: {\n          color: this.iconColor\n        }\n      }, this.computedIcon);\n    },\n    classes: function classes() {\n      var classes = _objectSpread({}, VSheet.options.computed.classes.call(this), {\n        'v-alert--border': Boolean(this.border),\n        'v-alert--dense': this.dense,\n        'v-alert--outlined': this.outlined,\n        'v-alert--prominent': this.prominent,\n        'v-alert--text': this.text\n      });\n\n      if (this.border) {\n        classes[\"v-alert--border-\".concat(this.border)] = true;\n      }\n\n      return classes;\n    },\n    computedColor: function computedColor() {\n      return this.color || this.type;\n    },\n    computedIcon: function computedIcon() {\n      if (this.icon === false) return false;\n      if (typeof this.icon === 'string' && this.icon) return this.icon;\n\n      switch (this.type) {\n        case 'info':\n          return '$vuetify.icons.info';\n\n        case 'error':\n          return '$vuetify.icons.error';\n\n        case 'success':\n          return '$vuetify.icons.success';\n\n        case 'warning':\n          return '$vuetify.icons.warning';\n\n        default:\n          return false;\n      }\n    },\n    hasColoredIcon: function hasColoredIcon() {\n      return this.hasText || Boolean(this.border) && this.coloredBorder;\n    },\n    hasText: function hasText() {\n      return this.text || this.outlined;\n    },\n    iconColor: function iconColor() {\n      return this.hasColoredIcon ? this.computedColor : undefined;\n    },\n    isDark: function isDark() {\n      if (this.type && !this.coloredBorder && !this.outlined) return true;\n      return Themeable.options.computed.isDark.call(this);\n    }\n  },\n  created: function created() {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('outline')) {\n      breaking('outline', 'outlined', this);\n    }\n  },\n  methods: {\n    genWrapper: function genWrapper() {\n      var children = [this.$slots.prepend || this.__cachedIcon, this.genContent(), this.__cachedBorder, this.$slots.append, this.$scopedSlots.close ? this.$scopedSlots.close({\n        toggle: this.toggle\n      }) : this.__cachedDismissible];\n      var data = {\n        staticClass: 'v-alert__wrapper'\n      };\n      return this.$createElement('div', data, children);\n    },\n    genContent: function genContent() {\n      return this.$createElement('div', {\n        staticClass: 'v-alert__content'\n      }, this.$slots.default);\n    },\n    genAlert: function genAlert() {\n      var data = {\n        staticClass: 'v-alert',\n        attrs: {\n          role: 'alert'\n        },\n        class: this.classes,\n        style: this.styles,\n        directives: [{\n          name: 'show',\n          value: this.isActive\n        }]\n      };\n\n      if (!this.coloredBorder) {\n        var setColor = this.hasText ? this.setTextColor : this.setBackgroundColor;\n        data = setColor(this.computedColor, data);\n      }\n\n      return this.$createElement('div', data, [this.genWrapper()]);\n    },\n\n    /** @public */\n    toggle: function toggle() {\n      this.isActive = !this.isActive;\n    }\n  },\n  render: function render(h) {\n    var render = this.genAlert();\n    if (!this.transition) return render;\n    return h('transition', {\n      props: {\n        name: this.transition,\n        origin: this.origin,\n        mode: this.mode\n      }\n    }, [render]);\n  }\n});",null]}