{"remainingRequest":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/thread-loader/dist/cjs.js!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/babel-loader/lib/index.js!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/vuetify/lib/components/VBadge/VBadge.js","dependencies":[{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/vuetify/lib/components/VBadge/VBadge.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["// Styles\nimport \"../../../src/components/VBadge/VBadge.sass\"; // Mixins\n\nimport Colorable from \"../../mixins/colorable\";\nimport Toggleable from \"../../mixins/toggleable\";\nimport { factory as PositionableFactory } from \"../../mixins/positionable\";\nimport Transitionable from \"../../mixins/transitionable\";\nimport mixins from \"../../util/mixins\";\nexport default mixins(Colorable, Toggleable, PositionableFactory(['left', 'bottom']), Transitionable\n/* @vue/component */\n).extend({\n  name: 'v-badge',\n  props: {\n    color: {\n      type: String,\n      default: 'primary'\n    },\n    overlap: Boolean,\n    transition: {\n      type: String,\n      default: 'fab-transition'\n    },\n    value: {\n      default: true\n    }\n  },\n  computed: {\n    classes: function classes() {\n      return {\n        'v-badge--bottom': this.bottom,\n        'v-badge--left': this.left,\n        'v-badge--overlap': this.overlap\n      };\n    }\n  },\n  render: function render(h) {\n    var badge = this.$slots.badge && [h('span', this.setBackgroundColor(this.color, {\n      staticClass: 'v-badge__badge',\n      attrs: this.$attrs,\n      directives: [{\n        name: 'show',\n        value: this.isActive\n      }]\n    }), this.$slots.badge)];\n    return h('span', {\n      staticClass: 'v-badge',\n      class: this.classes\n    }, [this.$slots.default, this.transition ? h('transition', {\n      props: {\n        name: this.transition,\n        origin: this.origin,\n        mode: this.mode\n      }\n    }, badge) : badge]);\n  }\n});",null]}