{"remainingRequest":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/thread-loader/dist/cjs.js!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/babel-loader/lib/index.js!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/vuetify-loader/lib/loader.js!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/src/views/Sends/SendForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/src/views/Sends/SendForm.vue","mtime":1585119550000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _defineProperty from \"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport transaction from \"@/libs1/transaction\";\nimport crypto from \"@/libs1/crypto\";\nimport { mapState, mapGetters } from \"vuex\";\nexport default {\n  data: function data() {\n    var _this = this;\n\n    return {\n      fee: 0.1,\n      amount: \"\",\n      valid: false,\n      sendConfirm: false,\n      sendInfo: {},\n      recipient: \"\",\n      Description: \"\",\n      networkType: this.$config.NET_BYTE,\n      activeTab: 0,\n      //hot or cold\n      vsysBalance: 0,\n      hotAddrKeyPair: {},\n      sendPromp: \"\",\n      rules: {\n        maxLength: function maxLength(f) {\n          return function (v) {\n            if (v && v.length) {\n              return v.length < f || \"Description shouldn't be longer than \".concat(f, \".\");\n            } else {\n              return true;\n            }\n          };\n        },\n        required: function required(f) {\n          return function (v) {\n            return !!v || \"\".concat(f, \" is required\");\n          };\n        },\n        validAddr: function validAddr(netByte) {\n          return function (v) {\n            var reg = /[1-9a-km-zA-HJ-NP-Z]/;\n\n            if (v) {\n              var _iteratorNormalCompletion = true;\n              var _didIteratorError = false;\n              var _iteratorError = undefined;\n\n              try {\n                for (var _iterator = v[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                  var i = _step.value;\n                  if (!reg.test(i)) return \"Invalid address\";\n                }\n              } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                  }\n                } finally {\n                  if (_didIteratorError) {\n                    throw _iteratorError;\n                  }\n                }\n              }\n            }\n\n            return crypto.isValidAddress(v, netByte) && _this.wallets[_this.currentIndex].address != v || \"Invalid address\";\n          };\n        },\n        validPublicKey: function validPublicKey(addr, netByte) {\n          return function (v) {\n            return crypto.isValidPublicKey(v, addr, netByte) || \"Invalid publicKey\";\n          };\n        },\n        maxAmount: function maxAmount(f) {\n          return function (v) {\n            return Number(v) <= Number(f) || \"Insufficient Balance\";\n          };\n        },\n        validAmount: function validAmount() {\n          return function (v) {\n            if (v && Number(v)) {\n              var a = _this.$utils.Big(v).times(_this.unity).toFixed();\n\n              if (a) {\n                if (a.indexOf(\".\") !== -1) return \"Too many decimal\";\n                if (a.length > 20) return \"No longer than 20 bits\";\n              }\n            }\n\n            return /^([1-9]\\d*|0)(\\.\\d{0,20})?$/.test(v) || \"\".concat(v, \" is not valid\");\n          };\n        }\n      }\n    };\n  },\n  created: function created() {\n    this.getVSYS();\n    this.fee = window.constants.TOKEN_ID === \"VSYS Coin\" ? window.constants.TX_FEE.Default : window.constants.TX_FEE.ContractExec;\n    this.precision = this.unity;\n    this.recipient = this.$store.state.sendInfo.recipient;\n    this.amount = this.$store.state.sendInfo.amount;\n    this.Description = this.$store.state.sendInfo.description;\n  },\n  computed: _objectSpread({}, mapState([\"wallets\", \"currentIndex\", \"unity\"]), {}, mapGetters([\"balance\"])),\n  methods: {\n    goConfirm: function goConfirm() {\n      if (!this.$refs.form.validate()) return; // Info of Send Confirm Dialog\n\n      this.sendInfo = {\n        From: this.wallets[this.currentIndex].address,\n        To: this.recipient,\n        Type: \"Payment\",\n        Amount: this.amount,\n        Fee: this.fee,\n        Description: this.Description\n      };\n      this.sendConfirm = true;\n    },\n    getVSYS: function getVSYS() {\n      this.$store.dispatch(\"update_vsys\", this.currentIndex);\n    },\n    handleCancel: function handleCancel() {\n      if (this.$store.state.loginType === \"send\") {\n        this.$router.replace({\n          path: \"/home/shift\"\n        });\n      } else {\n        this.$store.commit(\"reset_sendinfo\");\n        this.$router.replace({\n          path: \"/home\"\n        });\n      }\n    },\n    routerBtn: function routerBtn() {\n      var _this2 = this;\n\n      if (!this.$refs.form.validate()) return;\n\n      if (this.$store.state.tokenid === \"VSYS Coin\") {// const dataInfo = {\n        //   recipient: this.recipient,\n        //   amount: parseInt(this.amount * this.precision),\n        //   fee: parseInt(this.fee * constants.VSYS_PRECISION),\n        //   feeScale: constants.FEE_SCALE,\n        //   timestamp: Date.now(),\n        //   attachment: this.Description\n        // };\n        // this.doPayment = apiSchema => {\n        //   axios\n        //     .post(`http://18.218.106.1:9922/vsys/broadcast/payment`, apiSchema)\n        //     .then(dealRes)\n        //     .catch(dealErr);\n        // };\n        // if (this.activeTab === 0) {//hot wallet\n        //   let apiSchema = transaction.prepareForAPI(\n        //     dataInfo,\n        //     this.hotAddrKeyPair['AUAztxsft2v6rmjRRb72nLea6BNyRHHWpUR'],\n        //     constants.TRANSACTION_TYPE.PAYMENT_TX\n        //   );\n        //   this.doPayment(apiSchema);\n        // } else {\n        //   this.txType = constants.TRANSACTION_TYPE.PAYMENT_TX;\n        //   this.toSign = dataInfo;\n        // }\n      } else {\n        var contractId = transaction.tokenIdToContractId(this.$config.tokenId);\n        console.log(contractId);\n        var dataInfo = {\n          contractId: contractId,\n          functionIndex: this.$store.state.canSplit ? 4 : 3,\n          functionData: transaction.prepareTokenSendFuncDataStr(this.recipient, parseInt(this.amount * this.precision)),\n          attachment: this.Description || \"\",\n          fee: parseInt(this.fee * window.constants.VSYS_PRECISION),\n          feeScale: window.constants.FEE_SCALE,\n          timestamp: Date.now() * 1e6\n        }; //hot wallet\n\n        if (this.activeTab === 0) {\n          var apiSchema = transaction.prepareForAPI(dataInfo, this.wallets[this.currentIndex].keyPair, window.constants.TRANSACTION_TYPE.CONTRACT_EXEC_TX); //update send info in store\n\n          this.$store.commit(\"update_sendInfo\", {\n            recipient: this.recipient,\n            amount: this.amount,\n            description: this.Description || \"\"\n          }); //transaction broadcast\n\n          this.$axios.post(\"\".concat(this.$config.vsysEndPoint, \"/contract/broadcast/execute\"), apiSchema).then(function (res) {\n            if (res.status === 200) {\n              _this2.$store.commit(\"update_loginType\", \"\");\n\n              _this2.$router.replace({\n                path: \"/home/send/finish\"\n              });\n            }\n          }).catch(function (err) {\n            if (err.response && err.response.status === 400) {\n              console.log(err.response);\n\n              if (err.response.data.error === 112) {\n                _this2.sendPromp = \"Not enough VSYS.\";\n              }\n            } else {\n              _this2.sendPromp = \"Sorry,Transaction form submission failed\";\n            }\n          });\n        } else {\n          //cold wallet\n          this.txType = window.constants.TRANSACTION_TYPE.CONTRACT_EXEC_TX;\n          this.toSign = dataInfo;\n        }\n      }\n    }\n  }\n};",null]}