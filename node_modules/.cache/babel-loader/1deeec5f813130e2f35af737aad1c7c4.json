{"remainingRequest":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/thread-loader/dist/cjs.js!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/babel-loader/lib/index.js!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/vuetify/lib/mixins/applicationable/index.js","dependencies":[{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/vuetify/lib/mixins/applicationable/index.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { factory as PositionableFactory } from \"../positionable\"; // Util\n\nimport mixins from \"../../util/mixins\";\nexport default function applicationable(value) {\n  var events = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  /* @vue/component */\n  return mixins(PositionableFactory(['absolute', 'fixed'])).extend({\n    name: 'applicationable',\n    props: {\n      app: Boolean\n    },\n    computed: {\n      applicationProperty: function applicationProperty() {\n        return value;\n      }\n    },\n    watch: {\n      // If previous value was app\n      // reset the provided prop\n      app: function app(x, prev) {\n        prev ? this.removeApplication(true) : this.callUpdate();\n      },\n      applicationProperty: function applicationProperty(newVal, oldVal) {\n        this.$vuetify.application.unregister(this._uid, oldVal);\n      }\n    },\n    activated: function activated() {\n      this.callUpdate();\n    },\n    created: function created() {\n      for (var i = 0, length = events.length; i < length; i++) {\n        this.$watch(events[i], this.callUpdate);\n      }\n\n      this.callUpdate();\n    },\n    mounted: function mounted() {\n      this.callUpdate();\n    },\n    deactivated: function deactivated() {\n      this.removeApplication();\n    },\n    destroyed: function destroyed() {\n      this.removeApplication();\n    },\n    methods: {\n      callUpdate: function callUpdate() {\n        if (!this.app) return;\n        this.$vuetify.application.register(this._uid, this.applicationProperty, this.updateApplication());\n      },\n      removeApplication: function removeApplication() {\n        var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n        if (!force && !this.app) return;\n        this.$vuetify.application.unregister(this._uid, this.applicationProperty);\n      },\n      updateApplication: function updateApplication() {\n        return 0;\n      }\n    }\n  });\n}",null]}