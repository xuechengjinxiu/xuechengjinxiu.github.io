{"remainingRequest":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/thread-loader/dist/cjs.js!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/babel-loader/lib/index.js!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/vuetify/lib/components/VExpansionPanel/VExpansionPanel.js","dependencies":[{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/vuetify/lib/components/VExpansionPanel/VExpansionPanel.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Mixins\nimport { factory as GroupableFactory } from \"../../mixins/groupable\";\nimport { provide as RegistrableProvide } from \"../../mixins/registrable\"; // Utilities\n\nimport { getSlot } from \"../../util/helpers\";\nimport mixins from \"../../util/mixins\";\nexport default mixins(GroupableFactory('expansionPanels', 'v-expansion-panel', 'v-expansion-panels'), RegistrableProvide('expansionPanel', true)\n/* @vue/component */\n).extend({\n  name: 'v-expansion-panel',\n  props: {\n    disabled: Boolean,\n    readonly: Boolean\n  },\n  data: function data() {\n    return {\n      content: null,\n      header: null,\n      nextIsActive: false\n    };\n  },\n  computed: {\n    classes: function classes() {\n      return _objectSpread({\n        'v-expansion-panel--active': this.isActive,\n        'v-expansion-panel--next-active': this.nextIsActive,\n        'v-expansion-panel--disabled': this.isDisabled\n      }, this.groupClasses);\n    },\n    isDisabled: function isDisabled() {\n      return this.expansionPanels.disabled || this.disabled;\n    },\n    isReadonly: function isReadonly() {\n      return this.expansionPanels.readonly || this.readonly;\n    }\n  },\n  methods: {\n    registerContent: function registerContent(vm) {\n      this.content = vm;\n    },\n    unregisterContent: function unregisterContent() {\n      this.content = null;\n    },\n    registerHeader: function registerHeader(vm) {\n      this.header = vm;\n      vm.$on('click', this.onClick);\n    },\n    unregisterHeader: function unregisterHeader() {\n      this.header = null;\n    },\n    onClick: function onClick(e) {\n      if (e.detail) this.header.$el.blur();\n      this.$emit('click', e);\n      this.isReadonly || this.isDisabled || this.toggle();\n    },\n    toggle: function toggle() {\n      var _this = this;\n\n      /* istanbul ignore else */\n      if (this.content) this.content.isBooted = true;\n      this.$nextTick(function () {\n        return _this.$emit('change');\n      });\n    }\n  },\n  render: function render(h) {\n    return h('div', {\n      staticClass: 'v-expansion-panel',\n      class: this.classes,\n      attrs: {\n        'aria-expanded': String(this.isActive)\n      }\n    }, getSlot(this));\n  }\n});",null]}