{"remainingRequest":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/thread-loader/dist/cjs.js!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/babel-loader/lib/index.js!/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/vuetify/lib/components/VTimePicker/VTimePickerClock.js","dependencies":[{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/vuetify/lib/components/VTimePicker/VTimePickerClock.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/jin/Desktop/v-cloud-feature-common-component/token-service/wallet/ui/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.math.sign\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport \"../../../src/components/VTimePicker/VTimePickerClock.sass\"; // Mixins\n\nimport Colorable from \"../../mixins/colorable\";\nimport Themeable from \"../../mixins/themeable\"; // Types\n\nimport mixins from \"../../util/mixins\";\nexport default mixins(Colorable, Themeable\n/* @vue/component */\n).extend({\n  name: 'v-time-picker-clock',\n  props: {\n    allowedValues: Function,\n    ampm: Boolean,\n    disabled: Boolean,\n    double: Boolean,\n    format: {\n      type: Function,\n      default: function _default(val) {\n        return val;\n      }\n    },\n    max: {\n      type: Number,\n      required: true\n    },\n    min: {\n      type: Number,\n      required: true\n    },\n    scrollable: Boolean,\n    readonly: Boolean,\n    rotate: {\n      type: Number,\n      default: 0\n    },\n    step: {\n      type: Number,\n      default: 1\n    },\n    value: Number\n  },\n  data: function data() {\n    return {\n      inputValue: this.value,\n      isDragging: false,\n      valueOnMouseDown: null,\n      valueOnMouseUp: null\n    };\n  },\n  computed: {\n    count: function count() {\n      return this.max - this.min + 1;\n    },\n    degreesPerUnit: function degreesPerUnit() {\n      return 360 / this.roundCount;\n    },\n    degrees: function degrees() {\n      return this.degreesPerUnit * Math.PI / 180;\n    },\n    displayedValue: function displayedValue() {\n      return this.value == null ? this.min : this.value;\n    },\n    innerRadiusScale: function innerRadiusScale() {\n      return 0.62;\n    },\n    roundCount: function roundCount() {\n      return this.double ? this.count / 2 : this.count;\n    }\n  },\n  watch: {\n    value: function value(_value) {\n      this.inputValue = _value;\n    }\n  },\n  methods: {\n    wheel: function wheel(e) {\n      e.preventDefault();\n      var delta = Math.sign(-e.deltaY || 1);\n      var value = this.displayedValue;\n\n      do {\n        value = value + delta;\n        value = (value - this.min + this.count) % this.count + this.min;\n      } while (!this.isAllowed(value) && value !== this.displayedValue);\n\n      if (value !== this.displayedValue) {\n        this.update(value);\n      }\n    },\n    isInner: function isInner(value) {\n      return this.double && value - this.min >= this.roundCount;\n    },\n    handScale: function handScale(value) {\n      return this.isInner(value) ? this.innerRadiusScale : 1;\n    },\n    isAllowed: function isAllowed(value) {\n      return !this.allowedValues || this.allowedValues(value);\n    },\n    genValues: function genValues() {\n      var children = [];\n\n      for (var value = this.min; value <= this.max; value = value + this.step) {\n        var color = value === this.value && (this.color || 'accent');\n        children.push(this.$createElement('span', this.setBackgroundColor(color, {\n          staticClass: 'v-time-picker-clock__item',\n          class: {\n            'v-time-picker-clock__item--active': value === this.displayedValue,\n            'v-time-picker-clock__item--disabled': this.disabled || !this.isAllowed(value)\n          },\n          style: this.getTransform(value),\n          domProps: {\n            innerHTML: \"<span>\".concat(this.format(value), \"</span>\")\n          }\n        })));\n      }\n\n      return children;\n    },\n    genHand: function genHand() {\n      var scale = \"scaleY(\".concat(this.handScale(this.displayedValue), \")\");\n      var angle = this.rotate + this.degreesPerUnit * (this.displayedValue - this.min);\n      var color = this.value != null && (this.color || 'accent');\n      return this.$createElement('div', this.setBackgroundColor(color, {\n        staticClass: 'v-time-picker-clock__hand',\n        class: {\n          'v-time-picker-clock__hand--inner': this.isInner(this.value)\n        },\n        style: {\n          transform: \"rotate(\".concat(angle, \"deg) \").concat(scale)\n        }\n      }));\n    },\n    getTransform: function getTransform(i) {\n      var _this$getPosition = this.getPosition(i),\n          x = _this$getPosition.x,\n          y = _this$getPosition.y;\n\n      return {\n        left: \"\".concat(50 + x * 50, \"%\"),\n        top: \"\".concat(50 + y * 50, \"%\")\n      };\n    },\n    getPosition: function getPosition(value) {\n      var rotateRadians = this.rotate * Math.PI / 180;\n      return {\n        x: Math.sin((value - this.min) * this.degrees + rotateRadians) * this.handScale(value),\n        y: -Math.cos((value - this.min) * this.degrees + rotateRadians) * this.handScale(value)\n      };\n    },\n    onMouseDown: function onMouseDown(e) {\n      e.preventDefault();\n      this.valueOnMouseDown = null;\n      this.valueOnMouseUp = null;\n      this.isDragging = true;\n      this.onDragMove(e);\n    },\n    onMouseUp: function onMouseUp(e) {\n      e.stopPropagation();\n      this.isDragging = false;\n\n      if (this.valueOnMouseUp !== null && this.isAllowed(this.valueOnMouseUp)) {\n        this.$emit('change', this.valueOnMouseUp);\n      }\n    },\n    onDragMove: function onDragMove(e) {\n      e.preventDefault();\n      if (!this.isDragging && e.type !== 'click') return;\n\n      var _this$$refs$clock$get = this.$refs.clock.getBoundingClientRect(),\n          width = _this$$refs$clock$get.width,\n          top = _this$$refs$clock$get.top,\n          left = _this$$refs$clock$get.left;\n\n      var _this$$refs$innerCloc = this.$refs.innerClock.getBoundingClientRect(),\n          innerWidth = _this$$refs$innerCloc.width;\n\n      var _ref = 'touches' in e ? e.touches[0] : e,\n          clientX = _ref.clientX,\n          clientY = _ref.clientY;\n\n      var center = {\n        x: width / 2,\n        y: -width / 2\n      };\n      var coords = {\n        x: clientX - left,\n        y: top - clientY\n      };\n      var handAngle = Math.round(this.angle(center, coords) - this.rotate + 360) % 360;\n      var insideClick = this.double && this.euclidean(center, coords) < (innerWidth + innerWidth * this.innerRadiusScale) / 4;\n      var value = (Math.round(handAngle / this.degreesPerUnit) + (insideClick ? this.roundCount : 0)) % this.count + this.min; // Necessary to fix edge case when selecting left part of the value(s) at 12 o'clock\n\n      var newValue;\n\n      if (handAngle >= 360 - this.degreesPerUnit / 2) {\n        newValue = insideClick ? this.max - this.roundCount + 1 : this.min;\n      } else {\n        newValue = value;\n      }\n\n      if (this.isAllowed(value)) {\n        if (this.valueOnMouseDown === null) {\n          this.valueOnMouseDown = newValue;\n        }\n\n        this.valueOnMouseUp = newValue;\n        this.update(newValue);\n      }\n    },\n    update: function update(value) {\n      if (this.inputValue !== value) {\n        this.inputValue = value;\n        this.$emit('input', value);\n      }\n    },\n    euclidean: function euclidean(p0, p1) {\n      var dx = p1.x - p0.x;\n      var dy = p1.y - p0.y;\n      return Math.sqrt(dx * dx + dy * dy);\n    },\n    angle: function angle(center, p1) {\n      var value = 2 * Math.atan2(p1.y - center.y - this.euclidean(center, p1), p1.x - center.x);\n      return Math.abs(value * 180 / Math.PI);\n    }\n  },\n  render: function render(h) {\n    var _this = this;\n\n    var data = {\n      staticClass: 'v-time-picker-clock',\n      class: _objectSpread({\n        'v-time-picker-clock--indeterminate': this.value == null\n      }, this.themeClasses),\n      on: this.readonly || this.disabled ? undefined : Object.assign({\n        mousedown: this.onMouseDown,\n        mouseup: this.onMouseUp,\n        mouseleave: function mouseleave(e) {\n          return _this.isDragging && _this.onMouseUp(e);\n        },\n        touchstart: this.onMouseDown,\n        touchend: this.onMouseUp,\n        mousemove: this.onDragMove,\n        touchmove: this.onDragMove\n      }, this.scrollable ? {\n        wheel: this.wheel\n      } : {}),\n      ref: 'clock'\n    };\n    return h('div', data, [h('div', {\n      staticClass: 'v-time-picker-clock__inner',\n      ref: 'innerClock'\n    }, [this.genHand(), this.genValues()])]);\n  }\n});",null]}